<!DOCTYPE HTML>
<html>
<head>
<title>变更和新功能</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>变更和新功能</h1>
<p>下面列出了 AutoHotkey 当前开发分支(也称为 AutoHotkey_L)新增的功能.</p>
<p>对于较旧的变更,请参阅<a href="ChangeLogHelp.htm">存档变更</a>.</p>

<!--new revisions go here-->
<h2 id="v1.1.24.02">1.1.24.02 - October 13, 2016</h2>
<p>Added a <a href="Scripts.htm#Installer_uiAccess">Run with UI Access</a> option to the installer.</p>
<p>Added documentation for Tab3 <a href="commands/GuiControls.htm#Tab_Autosize">autosizing</a>.</p>
<p>Fixed several Tab3 bugs:</p>
<ul>
<li>Autosizing was not being triggered by the first call to <a href="commands/Gui.htm#Show">Gui Show</a> if the <code>AutoSize</code> or <code>w</code> and <code>h</code> options were used.</li>
<li>If a Tab3 control is empty when autosizing occurs, it now retains the default size instead of becoming unusable.</li>
<li>Autosizing now occurs immediately before creating another tab control, as though <a href="commands/GuiControls.htm#TabCmd">Gui Tab</a> was called.</li>
<li>Autosizing failed if the tab control had negative screen coords.</li>
<li>Hiding a Tab3 control with GuiControl now also hides its dialog/background.</li>
</ul>
<p>Fixed OnMessage to pass lParam as unsigned on 32-bit.</p>
<p>Fixed <code>Gui Name :</code> to allow spaces before the colon.</p>
<p>Fixed identifying a Gui or GuiControl by HWND with a negative value.</p>
<p>Fixed ComObject to suppress any errors raised by <a href="commands/ComObjConnect.htm">disconnection of events</a> after the script has released the object.</p>
<p>Fixed Gui Show causing the window to shrink if it had a multi-line menu bar.</p>
<p>Fixed <code>LV_InsertCol(n, width)</code> not causing ListView scrollbar to update on some OS versions.</p>
<p>Optimized code size of FileRecycleEmpty.</p>

<h2 id="v1.1.24.01">1.1.24.01 - August 2, 2016</h2>
<p>Changed <code>Hotkey, If, Expression</code> to raise an error if the unused third parameter is not blank.</p>
<p>Fixed <code>&amp;&amp;</code>, <code>||</code> and ternary to release any object used as the condition, as in <code>if (a.subObject &amp;&amp; b)</code>.</p>
<p>Fixed Gui/GuiControl failing to "check" radio buttons within a Tab3 control.</p>
<p>Fixed FileCreateShortcut to allow relative paths for the LinkFile parameter on Windows 10.</p>
<p>Fixed themed Tab3 control to not override the custom text color of its controls.</p>
<p>Fixed debugger mishandling continuation commands in some specific cases.</p>

<h2 id="v1.1.24.00">1.1.24.00 - May 22, 2016</h2>
<h4>Breaking changes:</h4>
<p>Passing SetTimer's <a href="commands/SetTimer.htm#Label"><em>Label</em></a> parameter an empty variable or an expression which results in an empty value is now considered an error. The parameter must be either given a non-empty value or <a href="commands/SetTimer.htm#OmitLabel">completely omitted</a>.</p>
<p><a href="commands/SetTimer.htm#once">Run-once timers</a> are automatically deleted after running if they are associated with an object created by the script. This allows the object to be freed if the script is no longer referencing it, but it also means the timer's <em>Period</em> and <em>Priority</em> are not retained.</p>
<p>SetTimer, Hotkey, GuiControl and Menu now check the minimum parameter count of functions given by reference (not just by name, as in previous versions). If the function requires too many parameters, an error is raised or ErrorLevel is set (as appropriate).</p>
<h4>Backward-compatible changes:</h4>
<p>If SetTimer's <a href="commands/SetTimer.htm#Label"><em>Label</em></a> parameter is <a href="commands/SetTimer.htm#OmitLabel">omitted</a> and <a href="Variables.htm#ThisLabel">A_ThisLabel</a> is empty, the current timer (if any) is used.</p>
<h4>New features:</h4>
<p>Added <a href="commands/GuiControls.htm#Tab">Tab3 control type</a>, solving a number of issues with Tab controls.</p>
<h4>Bug-fixes:</h4>
<p>Fixed GuiControl to update controls when adding/deleting tabs. Specifically:</p>
<ul>
  <li>Selecting a new tab with <code>||</code> now works correctly.</li>
  <li>Deleting all tabs now hides the controls of the former tab.</li>
</ul>
<p>Fixed <code>+Disabled</code>/<code>+Hidden</code> losing effect on controls in a tab.</p>
<p>Fixed disabled tab controls to ignore Ctrl+Tab.</p>
<p>Fixed <code>Gui Tab</code> without parameters to start a new radio group if applicable. <code>Gui Tab</code> with parameters already had this effect.</p>
<h2 id="v1.1.23.07">1.1.23.07 - May 20, 2016</h2>
<p>Fixed <code>Menu x, Insert, y, z, % object</code> to use the object, not ignore it.</p>
<p>Fixed <code>Menu x, Add, :item text, % object</code> to use the object, not look for a submenu.</p>

<h2 id="v1.1.23.06">1.1.23.06 - 2016年5月15日</h2>
<p>修复 <code>break label</code> 直接内嵌到它的目标循环中导致程序崩溃的问题.</p>

<h2 id="v1.1.23.05">1.1.23.05 - 2016年3月27日</h2>
<p>修复 InputBox, MsgBox, FileSelectFile 和 FileSelectFolder 命令在当Alt键被按下时会发送一个非预期的Alt-up出来. 这是由于在 v1.1.22.01 版本处理 Ctrl/Shift 时的错误导致的.</p>
<p>改进 Ctrl/Shift 的工作方式,以避免在同时按下Ctrl,Shift或Alt键时不必要的掩盖了Win键.</p>

<h2 id="v1.1.23.04">1.1.23.04 - 2016年3月26日</h2>
<p>修复 LV_Modify 以支持被忽略的参数, 如 <code>LV_Modify(r,, col1)</code>.</p>

<h2 id="v1.1.23.03">1.1.23.03 - 2016年3月12日</h2>
<p>修复 __Delete 元函数如果在异常传递过程中被调用时,错误的不抛出或重复抛出异常.</p>
<p>修复 当必须参数为空时函数调用的载入时侦测问题, 如 <code>fn(x,,y)</code>.</p>

<h2 id="v1.1.23.02">1.1.23.02 - 2016年3月12日</h2>
<p>修复 RegDelete 删除整个键值而非默认值.</p>
<p>代码维护;一些代码体积的精简,提升.</p>

<h2 id="v1.1.23.01">1.1.23.01 - 2016年1月24日</h2>
<p>修复 理论上可能存在从畸形或太长的路径中无法载入脚本的问题.</p>
<p>Ahk2Exe: 修复已编译脚本中的Unicode编码问题(v1.1.23.00版本引入).</p>

<h2 id="v1.1.23.00">1.1.23.00 - 2016年1月16日</h2>
<p>增加 <a href="commands/Menu.htm#Insert">Menu Insert</a> 子命令.</p>
<p>增加 <a href="commands/MenuGetHandle.htm">MenuGetHandle()</a>.</p>
<p>增加 <a href="commands/MenuGetName.htm">MenuGetName()</a>.</p>
<p>增加 Menu命令菜单项目: Radio, Right, Break 和 BarBreak.</p>
<p>改进 Menu命令以支持通过项目位置序号识别菜单项目: <code>1&amp;</code></p>
<p>增加 <a href="commands/LoadPicture.htm">LoadPicture()</a>.</p>
<p>增加 <a href="misc/ImageHandles.htm">hicon/hbitmap: </a>传递句柄给那些通常需要从文件载入图像的命令.</p>
<p>增加 内置变量: A_CoordModeToolTip/Pixel/Mouse/Caret/Menu, A_DefaultGui, A_DefaultListView, A_DefaultTreeView, A_KeyDelayPlay, A_KeyDuration/Play, A_MouseDelayPlay, A_SendLevel, A_SendMode 和 A_StoreCapslockMode.</p>
<p>增加 Hotkey 命令的 <code>Ix</code> 选项,动态设置热键的输入等级为 x .</p>
<p>改进 Picture 控件以支持背景透明的图标文件.</p>
<p>改进 Picture 控件以减少载入大图像时的闪烁现象.</p>
<p>对菜单部分的代码和内置变量查找做了一点优化.</p>
<p>修复 菜单项目中项目和分隔线的转换.</p>
<p>修复 A_ThisMenuItemPos 以支持重复的项目名称.</p>
<p>修复 子菜单无法在菜单被删除后有时重新创建.</p>
<p>修复 AutoHotkeyXXX.exe 直接运行时启动 AutoHotkey.chm, 而非 AutoHotkeyXXX.chm.</p>

<h2 id="v1.1.22.09">1.1.22.09 - 2015年11月11日</h2>
<p>修复 SetTimer Delete 的一些问题.</p>
<ul>
  <li>KeyHistory 的 timer 计数当中错误的包含了已经删除的 timer.</li>
  <li>由定时器初始化的线程中,如果已被删除但并未关闭的定时器调用了KeyHistory将会引起脚本崩溃.</li>
  <li>删除最近创建的定时器时会导致早前创建的定时器无法运行除非所有定时器被删除.</li>
</ul>

<h2 id="v1.1.22.08">1.1.22.08 - 2015年11月11日</h2>
<p>修复 For循环在_NewEnum/Next抛出异常时仍可以正确传递控制.</p>
<p>修复 Finally命令在其执行体执行完成后才暂停延迟异常而不是仅当遇到首个内建函数调用时.</p>
<p>修复 对于来自Finally代码段的不可用跳转的载入时侦测 (v1.1.20引入此BUG).</p>

<h2 id="v1.1.22.07">1.1.22.07 - 2015年9月27日</h2>
<p>修复 当DPI缩放为150+%且Gui没有使用 <code>-DPIScale</code> 参数,Gui控件中的 <code>w-1</code> 和 <code>h-1</code> 选项失效问题.</p>
<p>修复 <code>~<i>key</i> up</code> 热键没有自动 <code>Send {<i>key</i> down}</code>. 仅当热键在该键被按下后才被启用的时候会发生此问题.</p>
<h2 id="v1.1.22.06">1.1.22.06 - 2015年9月13日</h2>
<p>修复 输入和热字符串捕获 Unicode 和 无标记字符编码 事件.</p>
<p>修复 Edit 控件中如果最后一行为空行也进行自动伸缩大小.</p>
<p>修复 可响应 ComObj 函数的 内存不足 问题.</p>
<p>修复 ComObjArray 直接忽略多余的参数而不会崩溃 (仅适用于动态调用).</p>
<p>修复 GuiControl以"追加"的形式修改Tabs控件(而不是原来的直接替换,见<GuiControl>中的<Tab控制>说明).</p>
<p>修复 XP64 支持.</p>

<h2 id="v1.1.22.05">1.1.22.05 - 2015年9月10日</h2>
<p>修复 优化无数字 ID 的图标加载.</p>
<p>修复 当 Gui 销毁时,对于 +g 选项的函数对象不会主动释放资源.</p>
<p>修复 Gui Show 显示 主Gui 时避免强制激活 子GUI.</p>
<p>修复 当 Caps/Num/ScrollLock 按键按下时状态设置失败.</p>
<p>修复 Gui 颜色影响文本的颜色 (一般为黑色).</p>
<p>修改 提高当 Gui Show 时 GuiSize 立即执行的成功几率.</p>
<p><em>对于开发人员:</em></p>
<ul>
	<li>调整工程配置以适应更多 VC++ 版本.</li>
	<li>修复多个在 VC++ 2015 中出现的编译错误.</li>
	<li>64-bit 版本使用 VC++ 2015 来编译. 32-bit 版本仍然使用 VC++ 2010 编译.</li>
</ul>
<h2 id="v1.1.22.04">1.1.22.04 - 2015年8月19日</h2>
<p>修正ObjRawSet()不返回内容.</p>
<p>添加Windows 10 supportedOS标签到执行程序的manifest(避免一些兼容性问题).</p>
<p>添加检测函数声明中")"之后的语法错误的检测.</p>

<h2 id="v1.1.22.03">1.1.22.03 - 2015年6月12日</h2>
<p>修正A_EndChar在Unicode结尾字符中返回截断值的情况.</p>
<p>小变更:</p>
<ul>
	<li>改变A_Language使用GetSystemDefaultUILanguage()获取.</li>
	<li>重构托盘链接菜单Window Spy/帮助文件来提高代码复用.</li>
	<li>优化Gui/Menu/Hotkey/Hotstring/OnClipboard消息处理(多处).</li>
</ul>

<h2 id="v1.1.22.02">1.1.22.02 - 2015年5月27日</h2>
<p>修正TreeView对于未知消息不提交<code>*</code> 事件.</p>
<p>修正定时器删除本身时出现的崩溃或坏的表现.</p>
<p>修正RWin-up<a href="commands/_MenuMaskKey.htm">被屏蔽</a> 在某些罕见的情况下而LWin-up不会.</p>
<h2 id="v1.1.22.01">1.1.22.01 - 2015年5月24日</h2>
<p>修正Text/Edit/Button控件调整大小来弥补字符溢出.</p>
<p>修正注册表命令允许在子键中使用<code>:</code>当与根键合并.</p>
<p>修正热键优先顺序.</p>
<p>重构else/try/catch/finally来支持<code>hotkey::try cmd</code>.</p>
<p>添加一个脚本对话框的解决方案就像Ctrl或Shift在键盘钩子被锁后按下的情况.</p>

<h2 id="v1.1.22.00">1.1.22.00 - 2015年5月1日</h2>
<p>添加SetErrorMode(SEM_FAILCRITICALERRORS)在程序启动时抑制系统级错误消息,例如"驱动器中没有磁盘".调用Drive或DriveGet不再影响进程的错误模式.</p>
<p>变更MonthCal控件默认拥有tab-stop在Vista或更高系统中.</p>
<p>改进ComObjConnect使用IProvideClassInfo,如果可用.</p>
<p>修正了方法,属性定义和括号在同一行结束出现的一些问题.</p>
<p>修正Text/Link控件自动调整大小在+Border (WS_BORDER)样式情况下.</p>
<p>修正<code>Break <i>N</i></code> 当loop直接跟在If/Else/Try/Catch后面的情况.</p>

<h2 id="v1.1.21.03">1.1.21.03 - 2015年4月12日</h2>
<p>修正属性和方法之间的命名冲突检测.</p>

<h2 id="v1.1.21.02">1.1.21.02 - 2015年4月4日</h2>
<p>修正<code>OnMessage(msg, fnobj, 0)</code> 不做任何事如果<em>fnobj</em> 没有被注册.</p>

<h2 id="v1.1.21.01">1.1.21.01 - 2015年4月3日</h2>
<p>修正 StrReplace() 允许 ReplaceText 被省略.</p>
<p>修正类变量名使用非ASCII命名.</p>

<h2 id="v1.1.21.00">1.1.21.00 - 2015年3月28日</h2>
<p>添加<a href="commands/LoopReg.htm">Loop, Reg, RootKey[\Key, Mode]</a>.</p>
<p>添加<a href="commands/LoopFile.htm">Loop, Files, FilePattern [, Mode]</a>.</p>
<p>变更 <em>InputVar</em> 参数允许 <a href="Variables.htm#percent-space">% 表达式</a> (除了命令).</p>
<p>修订<a href="objects/Object.htm">对象方法</a>:</p>
<ul>
  <li>添加Object.InsertAt(), Object.Push() 和ObjRawSet().</li>
  <li>添加Object.Delete(), Object.RemoveAt()和Object.Pop().</li>
  <li>添加Object.Length().</li>
</ul>
<p>添加 <a href="commands/Ord.htm">Ord()</a> 和更新 Chr() 来支持补充字符 (&gt;0xFFFF).</p>
<p>添加 <a href="commands/StringReplace.htm">StrReplace()</a>.</p>
<p>移除RegRead的过时的5参数模式,这是为了兼容AutoIt v2(额外的参数是未使用的).</p>
<p>变更<a href="commands/RegRead.htm">RegRead</a>, <a href="commands/RegWrite.htm">RegWrite</a> and <a href="commands/RegDelete.htm">RegDelete</a>根键和子键参数可以随意组合.</p>

<h2 id="v1.1.20.03">1.1.20.03 - 2015年3月21日</h2>
<p>修正MouseGetPos (OutputVarControl),GuiContextMenu,GuiDropFiles (A_GuiControl)忽略被禁用的控件的问题[broken by v1.1.20.00].</p>

<h2 id="v1.1.20.02">1.1.20.02 - 2015年3月11日</h2>
<p>修正OnMessage的add-first模式.</p>
<p>修正A_OSVersion未知的x64版本操作系统.</p>
<p>修正ExitApp来取消暂停脚本在释放对象前以防__delete 元功能已调用.</p>
<p>琐碎的优化和代码维护.</p>

<h2 id="v1.1.20.01">1.1.20.01 - 2015年3月10日</h2>
<p>由于在线程中断中的保存和恢复ErrorLevel上意想不到的后果,恢复v1.1.20.00所做的更改.</p>
<ul>
  <li>ErrorLevel在新线程开始时不会重置或清除, 反而,它保留了在中断线程的值,就像v1.1.19及早期版本.</li>
  <li>如果ErrorLevel包含一个对象并且线程被中断,线程继续时对象替换为空字符串,就像v1.1.19及早期版本.</li>
  <li>当线程继续时,如果ErrorLevel包含一个字符串的长度超过127个字符,它会被截断,就像v1.1.19及早期版本.</li>
</ul>
<p>修正定时器有时会导致ErrorLevel会被格式化成十六进制值.</p>
<p>修正类方法保留类的计数引用.</p>

<h2 id="v1.1.20.00">1.1.20.00 - 2015年3月8日</h2>
<h4>New features:</h4>
<p>增强Hotkey, Menu, SetTimer, Gui events 和 Gui control events接受<a href="misc/Labels.htm#Functions">函数替换标签</a>, 如果没有找到标签.</p>
<p>增强Hotkey, Menu, SetTimer and Gui control events接受<a href="objects/Functor.htm">Func对象</a>.添加一个删除子命令来让settimer释放对象.</p>
<p>增强<a href="commands/OnMessage.htm">OnMessage()</a>允许任意数量的函数或函数对象来监控单个消息.</p>
<p>添加<a href="commands/OnExit.htm">OnExit()</a>和<a href="commands/OnClipboardChange.htm">OnClipboardChange()</a>接受函数名或对象.</p>
<p>添加<a href="Hotkeys.htm#Function">热键标签指向函数</a>的功能.</p>
<p>添加<a href="commands/Format.htm#ULT">U/L/T修饰语</a>执行Format()的情况转换.</p>
<p>添加Input的<a href="commands/Input.htm#E">E选项</a>, 从而处理单个字符的字符代码结束键而不是通过键码.</p>
<p>添加FileAppend的** (stderr)支持.</p>
<p>添加<a href="commands/ObjBindMethod.htm">ObjBindMethod(obj, method, args*)</a>和<a href="objects/Func.htm#Bind">Func.Bind(args*)</a>.</p>

<h4>变更:</h4>
<p>改变默认表现当主脚本未找到时:</p>
<ul>
  <li>如果没有指定脚本和未找到默认脚本文件,则在显示帮助文件的欢迎页.</li>
  <li>如果一个脚本被指定或帮助文件丢失(或被重命名),只显示一个错误信息.</li>
</ul>
<p>变更WinActivate来还原已经激活且最小化的窗口.</p>
<p>变更WinActivate来寻找一个可见窗口并激活当DetectHiddenWindows关闭且激活窗口是隐藏的时候,而不是什么事都不做.</p>
<p>变更A_CaretX/A_CaretY的获取方法.</p>
<ul>
  <li>在更多的情况下真正的插入位置不能确定时返回空白,而不是返回活动窗口的左上角.</li>
  <li>不太可能产生副作用.</li>
  <li>在console窗口中生效.</li>  
</ul>
<p>变更A_OSVersion使用<a href="http://msdn.microsoft.com/en-us/library/ff561910">RtlGetVersion()</a>,来获取win10及未来版本.</p>
<p>变更A_OSVersion返回"major.minor.build"格式如果系统没有名字.</p>
<p>变更对象来支持<code>x[,y]</code>, <code>x.y[,z]</code> and <code>x[](y)</code>.</p>
<ul>
  <li>用户自定义对象可以利用this来指定属性和元函数的参数的默认值.  在__Call中, 第一个参数被省略了,如<code>x.__Call(,y)</code>.</li>
  <li>COM对象调用 DISPID_VALUE如果成员名略. 例如, <code>x[]</code> 检索x的默认属性并且<code>fn[]()</code>可以用来调用JScript函数.</li>
</ul>
<p>一些底层的修改来修正bug,减少代码大小或者提高性能,包括:</p>
<ul>
  <li>变更#if和静态变量初始化的准备.</li>
  <li>变更{ 区块 }的准备.</li>
</ul>

<h4>错误修正:</h4>
<p>修正VK到键名的转换来遵循A-Z的布局.</p>
<ul>
  <li>适用于GetKeyName, Hotkey控件, A_PriorKey, KeyHistory和Input的EndKey ErrorLevel (除必需的Shift键).</li>
  <li>所有其他键包括非ASCII字符会被转换成Autohotkey的当前键盘布局.</li>
</ul>
<p>修正FileAppend的* (stdout) 遵循编码参数而不是ANSI文本.</p>
<p>修正自适应大小GUI只有一个滚动条的情况.</p>
<p>修正<code>Exception(m, n)</code> 当n太大时崩溃的情况.</p>
<p>修正GuiContextMenu在x64平台上正确设置A_GuiEvent.</p>
<p>修正如果文件不存在或无法打开,FileGetSize有时会给出一个不确定的结果.</p>
<p>修正线程中断时更完全地保存和恢复ErrorLevel[由于意想不到的结果在v1.1.20.01版本恢复].</p>
<p>修正ControlClick坐标模式忽略被禁用的控件.</p>
<p>修正当Gui +MaxSize的窗口尺寸小于+MinSize的奇怪状况.</p>
<p>修正GuiControl/Get传入GUI的HWND而需要GUI名的情况.</p>
<p>修正元函数干扰Exception()所报告的行号的问题.</p>

<h2 id="v1.1.19.03">1.1.19.03 - 2015年2月11日</h2>
<p>改进按键映射来支持<code>scXXX::Y</code> 当当前键盘布局不映射<code>scXXX</code>至VK码. 当然, <code>Y</code> 必须存在在当前键盘布局.</p>
<p>修正<code>break n</code> 运转正常当当前是<code>until</code>的情况,而不是终止线程.</p>
<p>修正ControlGetFocus破坏用户双击的能力(thanks HotKeyIt).</p>
<p>修正ListView不调用g标签当消息事件是不支持或未知的情况,例如LVN_GETEMPTYMARKUP.</p>
<p>修正<code>#Include *i &lt;X&gt;</code>当X语法错误时退出程序.</p>
<p>修正<code>for var in <i>expression</i></code> 有时程序崩溃当<i>expression</i> 调用一个脚本函数时.</p>

<h2 id="v1.1.19.02">1.1.19.02 - 2015年1月25日</h2>
<p>移除Win9x/Win2k上的16色图标支持.</p>
<p>移除单独的托盘图标资源.</p>
<p>改进选择DLL/EXE文件图标尺寸的功能.</p>
<ul><li>总之,宁愿降低尺寸而不是高档.这在125%或150% DPI系统特别有帮助.在系统图标的尺寸是20 / 40或24 / 48,而不是16 / 32.如果所有这些大小都存在于图标资源中,这种变化就没有什么区别.</li></ul>
<p>修正热键在加载时验证出错的情况.</p>
<ul>
	<li>热键永远都不可用时,例如foo::,现在会视为错误而不是警告信息.</li>
	<li>像^!&auml;::这样的热键是无效的因为当前键盘布局可以有相同的动作, 并且标签被正确注册(例如"^!&auml;"而不是"^!&auml;:"). 如果/ILIB命令行开关使用,警告被抑制.</li>
	<li>重映射是无效的因为当前键盘布局显示两个警告而不是不可恢复的错误.</li>
	<li>当滚轮键被作为前缀键,只有一个错误消息而不是两个,这遵循/ErrorStdOut.</li>
</ul>
<p>修正/iLib开关写入文件即使语法出错.</p>
<p>修正return/break/continue/跑到try..<a href="commands/Finally.htm">finally</a>.</p>

<h2 id="v1.1.19.01">1.1.19.01 - 2015年1月5日</h2>
<p>修复 Hotkey 命令在创建变量中已存在的热键时引起程序崩溃(由v1.1.19.00引入).</p>
<p>为 Hotkey 命令和 A_TimeIdle 做了多处优化(删除Win9x的支持).</p>

<h2 id="v1.1.19.00">1.1.19.00 - 2015年1月4日</h2>
<p>为<code>Func.Call()</code>增加了一个名字. <code>Func.()</code> 仍然可用但已废弃.</p>
<p>修正一些错误当<code>X.Y</code>和<code>X.Y(Z)</code> 在VBScript/JScript/C#:</p>
<ul>
  <li>如果<code>X.__Call</code> 包含一个函数<em>name</em>, 会被返回而不是调用.</li>
  <li>当<code>X.Y(Z)</code>返回一个值, Z被忽略. 它实现像<code>X.Y[Z]</code>当X.Y不是函数.</li>
</ul>
<p>修正热键命令忽略~前缀当<em>标签</em>被省略.</p>
<p>修正热键命令忽略$签注如果热键变种已经创建但没有使用$</p>
<p>修正<code>%Fn%()</code>语法工作于JavaScript函数对象.</p>
<p>修正EXE的manifest来禁用UAC检测算法 (由v1.1.17引入).</p>
<p>改进了线程在调试器的调用堆栈上的表现.</p>
<ul>
  <li>线程的类型被现实而不是标签名,这在下一个堆栈入口任然有效,热键,hotkey显示相反.</li>
  <li>子线程或者函数被调用后的行号被显示而不是开始之前的行号.</li>
</ul>

<h2 id="v1.1.18.00">1.1.18.00 - 2014年12月30日</h2>
<p>改进Autohotkey对象的IDispatch实现:</p>
<ul>
  <li><code>X.Y</code>在VBScript和C#中返回X.Y如果它不是函数对象; 以前则尝试调用X.Y()而不管类型.</li>
  <li><code>X(Y)</code>在VBScript, JScript和C#中返回X[Y]除非X是函数对象,在这种情况下它被调用如前.</li>
  <li><code>X[Y]</code>在C# 返回X[Y]如果X不是函数对象;以前则尝试调用X.[Y]()而不管类型.</li>
  <li><code>X.Y()</code>在C#中返回X.Y如果它不是函数对象,为了C#的歧义情况.</li>
  <li>未处理的异常都转换为IDispatch异常.</li>
</ul>
<p>添加创建JavaScript/IE DOM对象的新特性的支持.</p>
<p>修正<code>FileAppend, %VarContainingClipboardAll%, File</code>导致的崩溃问题.</p>

<h2 id="v1.1.17.01">1.1.17.01 - 2014年12月28日</h2>
<p>修正COM事件句柄没有收到最后的对象参数.</p>

<h2 id="v1.1.17.00">1.1.17.00 - 2014年12月27日</h2>
<h4>新特性:</h4>
<p>添加<a href="commands/Format.htm">Format()</a>.</p>
<p><a href="commands/FileOpen.htm">FileOpen()</a>现在可以读取stdin或者写入stout或sterr通过<code>"*"</code>或者<code>"**"</code> 作为文件名. <code>AutoHotkey.exe *</code> 可以用来从另一个线程执行程序管道而不是读取文件. 例子查看<a href="commands/Run.htm#ExecScript">ExecScript()</a>.</p>
<p>添加通过传递Autohotkey对象至COM API来实现IDispatch.</p>
<p>添加ComObject包装的VT_BYREF支持.使用<code>obj[]</code>来访问参考值.</p>
<h4>错误修复:</h4>
<p>修正在XP SP2上的蓝屏.</p>
<p>修正ComObjArray返回值,而不是指针. 也就是说,返回的数组的副本,而不是指向一个数组的指针,该数组将被删除.</p>
<p>修正第一次运行在生成的示例脚本中的URL.</p>
<p>修正<code>sc15D</code>映射到<code>vk5D</code>/AppsKey (Send, GetKeyName等等).</p>
<p>修正Edit控件不接受AltGr+A作为Ctrl+A.</p>
<p>修正静态类变量不作为一个标签的目标,该标签立即优先于类.</p>

<h2 id="v1.1.16.05">1.1.16.05 - 2014年9月28日</h2>
<p>修正x.y/[]/{}有时错误地被标记为variadic</p>

<h2 id="v1.1.16.04">1.1.16.04 - 2014年9月16日</h2>
<p>修正覆盖时只读属性产生的崩溃.</p>
<p>修正当RegExMatch对象是未捕获的子表达式的崩溃情况.</p>

<h2 id="v1.1.16.03">1.1.16.03 - 2014年9月11日</h2>
<p>修正Abs()和Mod()</p>

<h2 id="v1.1.16.02">1.1.16.02 - 2014年9月11日</h2>
<p>修复支持在类中使用#include (broken by a6ea27f).</p>
<p>修正某些情况剪切板返回二进制CF_HDROP数据.</p>
<p>改进文件被打开的情况下FileGetSize的精度.</p>
<p>改进for循环在COM对象中的表现.</p>

<h2 id="v1.1.16.01">1.1.16.01 - 2014,9月10</h2>
<p>支持在类中动态定义<a href="Objects.htm#Custom_Classes_property">属性</a>.</p>
<p>为Gui控件定位增加x+m与y+m选项.</p>
<p>为ListHotkeys(列出热键)中每个热键增加#InputLevel项.</p>
<p>优化带O(对象)选项的RegExMatch(正则查找).某些情况下,捕获长字符串较之前有极大提速.</p>
<p>修正对象,当__Call结束时将检测新方法(与__Set及__Get一致).</p>
<p>修正一些VarSetCapacity失败后的未定义行为.</p>
<p>修正FileRead,使正确报告文件超4GB时的错误,而非截断数据,即便不需要这部分数据时.</p>
<p>修正FileRead *c,使当字节长度为奇数时,亦能正确的放置空结尾字符.</p>
<p>修正ClipboardAll的问题,作如下改变:</p>
<ul>
  <li><a href="commands/_ClipboardTimeout.htm">#ClipboardTimeout</a>被GetClipboardData()忽略,之前它也并未实际发挥作用却导致问题.本修正解决剪切板为文件时(Windows 8中的任何文件,及zip或类似东西中的文件),超时及丢失数据的问题.</li>
  <li>为零长度剪切板内容分配1字节再返还给剪切板,之前设置为零长度似乎有问题.</li>
  <li>由Scintilla设置的MSDEVColumnSelect / MSDEVLineSelec将被保持,但由VS设置的任何数据将被丢弃.</li>
  <li>当直接将ClipboardAll写至文件时,将优先使用Unicode(ClipboardAll的其他使用情况自v1.1.08起便如此).</li>
  <li>Unicode版本中当ClipboardAll及FileRead *c数据长度为奇数时,将向上取整到最近的偶数.因此,由StrLen返回的结果可能被加1,避免可能对最后一个字节的截断.</li>
</ul>
<p>修正带负屏幕坐标值的TreeView控件的A_EventInfo值.</p>
<p>修正ListView/TreeView消息筛选中可能的问题.</p>
<p>修正A_LineFile / A_LineNumber在#If表达式中(无法正确返回设计值)的问题.</p>
<p>修正#If,被添加到ListLines中(将显示为If).</p>
<p>修正<code>Abs(["-"]*)</code>及类似情况下的崩溃问题.</p>
<p>修正全局中<code>} funcdef(){</code>及<code>}}</code>结尾的方法/属性/类.</p>
<h2 id="v1.1.15.04">1.1.15.04 - 2014,8月12</h2>
<p>修正性能问题:<code>&amp;变量包含长数值字符串</code>.</p>
<p>修正问题:当内置变量被赋值为对象时,会破坏内存数据.</p>
<p>修正解析器,以禁止某些代码中的<code>continue</code>命令,即便当前函数定义在Loop内.</p>
<p>修正错误,<code>File.Encoding := x "-RAW"</code>打断对非ASCII字符的编码/解码.<code>-RAW</code>后缀被略过.</p>

<h2 id="v1.1.15.03">1.1.15.03 - 2014 年 8 月 2 日</h2>
<p>修正使用 Exit 或 Throw 后元函数不正常退出线程的问题.</p>
<p>修正非编译脚本中 FileInstall 的 Dest 为相对路径时使用 A_WorkingDir 的问题.</p>

<h2 id="v1.1.15.02">1.1.15.02 - 2014 年 7 月 7 日</h2>
<p>修正调试对象中负整数键的问题.</p>

<h2 id="v1.1.15.01">1.1.15.01 - 2014 年 6 月 30 日</h2>
<p>改变内置的错误和警告对话框为置顶.</p>
<p>修正 <code>Until</code> 不会从递归的文件和注册表循环中中断的错误.</p>

<h2 id="v1.1.15.00">1.1.15.00 - 2014 年 5 月 4 日</h2>
<p>添加 A_OSVersion 值 <code>WIN_8.1</code>.</p>
<p>改变 Hotkey 命令根据是否存在<a href="Hotkeys.htm#Tilde">颚化符(~)前缀</a>应用或移除热键已有变体的穿透行为.</p>
<p>改变 exe manifest 以允许 <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724439">GetVersion</a>/<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724451">GetVersionEx</a> 检测到 Windows 8.1.</p>

<h2 id="v1.1.14.04">1.1.14.04 - 2014 年 4 月 25 日</h2>
<p>修正当 <em>Function</em> 为纯整数 0 时 DllCall() 会让脚本崩溃的问题.</p>
<p>修正 <code>IsFunc("ComObj(")</code> 返回错误而不抛出异常的问题.</p>
<p>修正 ControlClick 发送 XButton1/XButton2 时存在的问题.</p>

<h2 id="v1.1.14.03">1.1.14.03 - 2014 年 2 月 14 日</h2>
<p>修正当 &lt;c10&gt;X.__Init</code> 中止线程时 <code>new X</code> 中内存泄漏的问题.</p>
<p>修正当断点散布在方法定义中时会转移到类变量初始化位置的问题.</p>

<h2 id="v1.1.14.02">1.1.14.02 - 2014 年 1 月 30 日</h2>
<p>修正 <code>x::</code> 和 <code>x up::</code>,当 x 作为修饰键被阻止在按下触发时则让它们都在弹起时才触发.在 v1.1.14 中的预期行为是当 x 还用于自定义组合键(如 <code>x &amp; y::</code>)的时候,则 x 的单独热键和组合键都会在弹起时触发.</p>

<h2 id="v1.1.14.01">1.1.14.01 - 2014 年 1 月 15 日</h2>
<p>修正不带 Catch/Finally 的 Try 过程中无异常抛出时崩溃的错误.</p>

<h2 id="v1.1.14.00">1.1.14.00 - 2014 年 1 月 15 日</h2>
<p>增加 <a href="commands/Finally.htm">Finally</a> 语句用于 try/catch 后的清理操作.[fincs]</p>
<p><b>改变</b>自定义组合键中 <a href="Hotkeys.htm#Tilde">~ 前缀</a>的行为,使之更直观.</p>
<p>修正 <code>x &amp; y::</code> 热键中,在释放x时会触发 <code>x::</code> 和 <code>x up::</code> 热键的问题.</p>
<p>修正 ImageSearch,当 GDI 调用失败时设置 ErrorLevel=2(而非0).</p>
<p>修正 EnvGet,当变量超过 32767 个字符时致使程序崩溃的问题.</p>
<p>修正在 StatusBarWait 的 ErrorLevel 中一个小的错误处理缺陷.</p>
<p>修正 ANSI 版本中 FileRead *c 存在的堆损坏.</p>
<p>修正递归调用中传递局部变量到可变参数函数.</p>
<p>修正脚本第一行为小括号括住的表达式时,脚本加载失败的问题.</p>
<p>修正 PixelSearch 快速模式,使其仅在成功时才设置 OutputVarX/Y.</p>

<h2 id="v1.1.13.01">1.1.13.01 - 2013年10月11日</h2>
<p>修复 用已命名值调用带参可变函数.</p>

<h2 id="v1.1.13.00">1.1.13.00 - 2013年8月27日</h2>
<p>从v2测试版移植 <a href="commands/StringSplit.htm">StrSplit()</a> 函数.</p>

<h2 id="v1.1.12.00">1.1.12.00 - 2013年8月14日</h2>
<p>可选参数可通过连写两个逗号的方式略过, 如 <code>InStr(a, b,, 2)</code>.  和之前版本不同的是, 这种方式可以用在对象(包括COM对象)和内置函数中. <code>[a,,b]</code>  的写法可以用来创建稀疏数组.</p>
<p>对象属性现在可以通过使用可变值的方式赋予, 如 <code>x[y*]:=z</code> 中 y 包含了 键名/索引或一组参数.</p>

<h2 id="v1.1.11.02">1.1.11.02 - 2013年6月28日</h2>
<p>Fixed GuiControl/Get to accept the ClassNN of a ComboBox's child Edit.  Specifying the HWND of a ComboBox's child Edit was already supported as a means of identifying the ComboBox.</p>

<h2 id="v1.1.11.01">1.1.11.01 - 2013年6月25日</h2>
<p>Fixed InputBox default width/height (broken by v1.1.11.00 - commit <a href="https://github.com/Lexikos/AutoHotkey_L/commit/7373cc6443">7373cc6443</a>).</p>
<p>Fixed DllCall arg type validation to handle SYM_OBJECT safely, and to respect #Warn UseUnset (when var name is not a valid type).</p>
<p>Changed VarSetCapacity(var) to never warn about uninitialized vars.</p>

<h2 id="v1.1.11.00">1.1.11.00 - 2013年6月21日</h2>
<p>Added support for <code>%A_LineFile%</code> in <a href="commands/_Include.htm">#Include</a>.</p>
<p>Reduced the file size of AutoHotkeySC.bin by reducing the resolution of the (rarely used) filetype icon.</p>
<p>Fixed <code>class X extends Y</code> to allow Y to be defined after X.</p>
<p>Developed by fincs: AutoHotkey is now DPI-aware. The Gui commands automatically compensate when DPI is not 96. See <a href="commands/Gui.htm#DPIScale">Gui -DPIScale</a>.</p>
<h2 id="v1.1.10.01">1.1.10.01 - 2013年5月17日</h2>
<p>Improved RegRead to support REG_BINARY values larger than 64K.</p>
<p>Improved RegWrite to support REG_BINARY/REG_MULTI_SZ values larger than 64K.</p>
<p>Fixed Process Close (and possibly other things) on Windows XP.</p>

<h2 id="v1.1.10.00">1.1.10.00 - 2013年5月11日</h2>
<p>Added basic support for <a href="commands/GuiControls.htm#Custom">custom Gui control types</a>.</p>
<p>Revised <a href="commands/SoundSet.htm">SoundSet</a>, <a href="commands/SoundGet.htm">SoundGet</a> and 'WaveVolume commands to better support Windows Vista and later.</p>
<p>Fixed <code>Run "&lt;file&gt;" &lt;args&gt;</code> to not pass the space as part of the args.</p>
<p>Fixed some issues with reading from console input (CONIN$).</p>

<h2 id="v1.1.09.04">1.1.09.04 - 2013年3月14日</h2>
<p>Fixed Gui menu accelerator keys not working when the Gui itself (not a control) has focus.</p>

<h2 id="v1.1.09.03">1.1.09.03 - 2013年2月9日</h2>
<p>Fixed <a href="http://www.autohotkey.com/board/index.php?showtopic=89624">two bugs</a> which affected certain assignments where the target variable contains an unflushed binary number but has zero capacity.</p>
<p>Fixed GuiControl and GuiControlGet acting on the wrong control when given a HWND which does not belong to the current Gui. Instead, the condition is treated as an error.</p>
<p>Fixed OnMessage functions to set A_Gui and A_GuiControl correctly when the target Gui is a child window.</p>

<h2 id="v1.1.09.02">1.1.09.02 - 2012年12月24日</h2>
<p>Fixed MsgBox to show an error message when given invalid Options, instead of silently exiting the thread.</p>
<p>Fixed syntax errors in class var initializers causing the program to crash without the proper error message.</p>

<h2 id="v1.1.09.01">1.1.09.01 - 2012年12月15日</h2>
<p>Fixed AND/OR following a multi-statement comma, like <code>((x, y) and z)</code>.</p>
<p>Fixed RegExReplace to support duplicate subpattern names correctly.</p>
<p>Fixed Object.Remove() not freeing string keys.</p>
<p>Fixed base.Invoke() to not depend on dynamic variable resolution.</p>

<h2 id="v1.1.09.00">1.1.09.00 - 2012年11月7日</h2>

<h4>Breaking changes:</h4>
<p>Removed <a href="misc/AutoIt2Compat.htm">.aut file compatibility</a> and #AllowSameLineComments.</p>
<p>Removed undocumented AutoIt v2 commands.</p>

<h4>Backward-compatible changes:</h4>
<p>Allow optional parameters to be declared with <code>:=</code> instead of <code>=</code>, for consistency with variable declarations and expressions.</p>
<p>Allow non-ASCII characters in unquoted keys (<code>{<b>key</b>: x}</code> and <code>obj.<b>key</b></code>).</p>
<p>Changed name in version info from "AutoHotkey_L" to "AutoHotkey".</p>

<h4>Bug-fixes:</h4>
<p>Fixed instability caused by warning dialogs appearing part-way through evaluation of a command's args.</p>
<p>Fixed PixelSearch Fast mode treating "not found" as an error.</p>
<p>Fixed ahk_exe to allow other ahk_ criteria after it.</p>
<p>Fixed <code>else continue 2</code> and similar requiring braces around the loop.</p>
<p>Fixed RegRead indicating failure after successfully reading binary data.</p>
<p>Fixed <code>File.Length</code> to compensate for or flush any buffered data.</p>
<p>Fixed Gui sizing to account for scrollbars when present.</p>

<h4>Debugger:</h4>
<p>Added support for asynchronous commands.</p>
<p>Improved handling of breakpoints on lines like <code>else foo()</code> or <code>{ bar()</code> so that the debugger will actually break when appropriate.</p>
<p>Optimized code size, fixed several bugs and made the debugger generally more robust.</p>


<h2 id="v1.1.08.01">1.1.08.01 - 2012年8月3日</h2>
<p>Debugger: Fixed max_depth being either half the intended limit or unlimited.</p>

<h2 id="v1.1.08.00">1.1.08.00 - 2012年6月14日</h2>

<h4>Breaking changes:</h4>
<p>Changed the default script codepage to ANSI, as the previous behaviour was a common source of confusion. UTF-8 files must now have a byte order mark (BOM) to be recognized correctly. Notepad adds a BOM to any file saved as UTF-8.</p>
<p>Changed <code>return x</code> to preserve formatting of numeric strings; it is now equivalent to <code>return (x)</code>.</p>
<p>Changed <code>Gui, Name: New</code> to set the new GUI as the default.</p>

<h4>Other changes:</h4>
<p>Changed ClipboardAll to prefer CF_UNICODETEXT over other text formats.</p>
<p>Changed Gui Show to allow floating-point numbers.</p>
<p>Changed A_OSVersion to return WIN_8 on Windows 8.</p>
<p>Changed AutoHotkey.exe file description to include "ANSI/Unicode 32/64-bit".</p>
<p>Changed the parser to allow lines like <code>new MyObject()</code> with no assignment.</p>
<p>Upgraded PCRE to 8.30.</p>
<p>Improved wording of some <a href="commands/_Warn.htm">warnings</a> and added a pointer to the documentation at the bottom of the warning dialog.</p>
<p>Improvements to the debugger:</p>
<ul>
  <li>Added basic support for inspecting Func, ComObject and RegExMatchObject objects.</li>
  <li>Fixed the "attach debugger" message being ignored in some situations. See commit <a href="https://github.com/Lexikos/AutoHotkey_L/commit/83f0a0e39a0f69fc8861f8c4234690557c4ab347">83f0a0e</a>.</li>
</ul>

<h4>New features:</h4>
<p>Added support for the PCRE construct <code>(*MARK:NAME)</code> via <code>RegExMatchObject.Mark</code>.</p>
<p>Added support for <code>classvar.x := y</code> assignments in class definitions (after declaring <em>classvar</em>).</p>
<p>Added <a href="Variables.htm#Is64bitOS">A_Is64bitOS</a>.</p>
<p>Added <a href="commands/SetRegView.htm">SetRegView</a> and <a href="Variables.htm#RegView">A_RegView</a>.</p>

<h4>Fixes:</h4>
<p>Fixed <code>Func.()</code> to merely skip the function call if mandatory parameters were omitted instead of causing the thread to silently exit.</p>
<p>Fixed <code>Object.Remove()</code> not releasing object keys.</p>
<p>Fixed key-down/key-up hotkey pairs to suppress input correctly when only one hotkey in the pair is enabled.</p>
<p>Fixed <code>#Include &lt;Lib&gt;</code> to not affect the working directory used by subsequent #include directives.</p>
<p>Fixed <code>objaddref()</code> acting like <code>ObjRelease()</code> when called with a lower-case 'a'.</p>
<p>Fixed A_AhkPath in 32-bit compiled scripts to detect 64-bit AutoHotkey installations and vice versa.</p>
<p>Fixed TreeView controls with <code>-Background</code> option rendering incorrectly on older OSes.</p>
<p>Fixed error messages shown during execution of While/Until to identify the appropriate line.</p>

<h2 id="v1.1.07.03">1.1.07.03 - 2012年3月25日</h2>
<p>Fixed Ctrl/Alt/Shift key-down hotkey breaking any corresponding key-up hotkey defined before it.</p>
<p>Fixed key-down hotkeys to always use the hook if defined after a key-up hotkey of the same key. If the key-down hotkey used the "reg" method, the hook would block the key-down event and trigger only the key-up hotkey.</p>
<p>Fixed load-time checks interpreting expressions with no derefs as raw text. For example, <code>gosub % "foo"</code> resolved to <code>"foo":</code> at load-time. Similarly, <code>% ""</code> was seen as invalid in various cases even if an empty string should be allowed.</p>

<h2 id="v1.1.07.02">1.1.07.02 - 2012年3月22日</h2>
<p>Fixed a rare crash which can occur when GetClipboardData() fails.</p>
<p>Fixed ComObjArray() to return an empty string on failure instead of an arbitrary integer.</p>
<p>Fixed <code>Object.Remove(i, "")</code> affecting integer keys when <code>!Object.HasKey(i)</code>.</p>

<h2 id="v1.1.07.01">1.1.07.01 - 2012年3月2日</h2>
<p>Fixed FileRead to ignore #MaxMem when reading UTF-16 on Unicode builds.</p>
<p>Fixed dynamic function calls with built-in vars such as <code>%A_ThisLabel%()</code>.</p>

<h2 id="v1.1.07.00">1.1.07.00 - 2012年2月27日</h2>
<p>Enhanced <code><a href="Functions.htm#DynCall">%var%()</a></code> to support <a href="objects/Functor.htm">function objects</a> and the <a href="Objects.htm#Default_Base_Object">default __Call meta-function</a>.</p>
<p>Fixed <a href="commands/ControlGet.htm#List">ControlGet List</a> to work for ListViews where the script and the target process aren't both 32-bit or both 64-bit.</p>
<p>Fixed <a href="commands/Send.htm#SendEvent">SendEvent</a> with a key delay of 0; a change introduced by v1.1.05.04 caused it to be slower than intended.</p>
<p>Fixed <a href="objects/Object.htm#Remove">Object.Remove(i)</a> not adjusting keys if Object[i] doesn't exist.</p>
<p>Fixed an error in <a href="commands/ComObjType.htm">ComObjType()</a> which may have caused unpredictable behaviour when it is called via an <a href="commands/ComObjActive.htm#Remarks">alternative name</a>.</p>
<p>Fixed <a href="commands/ExitApp.htm">ExitApp</a> to exit the thread if an <a href="commands/OnExit.htm">OnExit</a> subroutine prevents the script from terminating, instead of resuming execution after the <a href="commands/Block.htm">block</a> which contained ExitApp.</p>
<p>Calling a function via an object no longer acts as a barrier to exiting the thread. Consequently, if <a href="commands/Exit.htm">Exit</a> is used or a runtime error occurs within a <a href="Objects.htm#Custom_Classes_method">class method</a>, the entire thread exits instead of just the function.</p>
<p>Calling a base-class method using <a href="Objects.htm#Custom_Classes_base">base.Method()</a> or similar inside a class definition no longer causes a <a href="commands/_Warn.htm">UseUnset</a> warning if the method doesn't exist. Consequently, instantiating an object which has <a href="Objects.htm#Custom_Classes_var">instance variables</a> no longer causes a warning about the internal <code>base.__Init</code> method if the base class has no instance variables.</p>

<h2 id="v1.1.06.02">1.1.06.02 - 2012年2月13日</h2>
<p>Fixed IniRead crashing when Section is omitted but Key isn't.</p>
<p>Fixed accuracy of FileGetSize with files which are 4GB or larger.</p>

<h2 id="v1.1.06.01">1.1.06.01 - 2012年2月12日</h2>
<p>Fixed MsgBox smart comma handling to require numeric Options, not Title.</p>

<h2 id="v1.1.06.00">1.1.06.00 - 2012年2月12日</h2>
<h4>New features:</h4>
<p>Integrated <a href="commands/_InputLevel.htm">#InputLevel</a> directive and <a href="commands/SendLevel.htm">SendLevel</a> command <a href="https://github.com/Lexikos/AutoHotkey_L/pull/7">by Russell Davis</a>.</p>
<p>Integrated support for <a href="commands/GuiControls.htm#Link">Link</a> controls <a href="https://github.com/Lexikos/AutoHotkey_L/pull/9">by ChrisS85</a>.</p>
<h4>Breaking changes:</h4>
<p>Changed command parser to avoid trimming escaped characters such as <code>`t</code> or <code>`&nbsp;</code> at the beginning or end of an arg.</p>
<p>Changed <a href="commands/MsgBox.htm">MsgBox</a>'s smart comma handling to improve flexibility and consistency.</p>
<ul>
  <li><code>%</code> can now be used to make Options or Timeout an expression.</li>
  <li>If the first arg is an expression, any unescaped comma which is not
    enclosed in quote marks or parentheses/brackets/braces will cause
    multi-arg mode to be used.  These commas were formerly interpreted
    as multi-statement operators within the first-and-only arg (Text).</li>
  <li>When Title is an expression, unescaped commas contained within the
    expression no longer interfere with smart comma handling.</li>
  <li>If there are exactly two args and the first is empty or an integer,
    multi-arg mode is used.  The former behaviour was to combine both
    into a single arg (Text).</li>
  <li>Timeout can be a literal number or a single deref (and optionally
    part of a number; for example, <code>%Timeout%.500</code>).  Contrary to the
    documentation, the former behaviour interpreted most other cases
    beginning with <code>%</code> as expressions (containing a double-deref).</li>
  <li>Title can be an expression even if Text and Options are omitted.</li>
</ul>
<p>Changed A_IsUnicode/A_IsCompiled to be defined as an empty string in ANSI versions/uncompiled scripts instead of being left undefined. This allows them to be checked without triggering <a href="commands/_Warn.htm">#Warn</a> warnings. Side effects include:</p>
<ul>
  <li>Attempting to assign directly to A_IsCompiled or A_IsUnicode always causes a load-time error. Dynamic assignments always fail, either silently or with an error dialog as appropriate. Previously assignments were allowed in uncompiled/non-Unicode scripts.</li>
  <li>Attempting to take the address of A_IsCompiled or A_IsUnicode always fails.</li>
  <li>A_IsCompiled and A_IsUnicode no longer appear in ListVars when referenced by a script which is not compiled/Unicode.</li>
</ul>
<p>Changed <a href="commands/Send.htm">Send</a> and related commands to respect <a href="commands/_MenuMaskKey.htm">#MenuMaskKey</a> when changing modifier keystates.</p>
<h4>Other changes:</h4>
<p>Changed <a href="commands/GuiControl.htm#Choose">GuiControl Choose</a> to remove the ListBox/ComboBox/DDL's current selection when N=0.</p>
<p>Changed <a href="commands/RegisterCallback.htm">RegisterCallback</a> to allow a <a href="objects/Func.htm">Func object</a> in place of a name.</p>
<p>Changed <a href="commands/ListLines.htm">ListLines</a> to show filenames (except when compiled).</p>
<p>Improved <a href="commands/Run.htm">Run</a> to output a process ID if possible when ShellExecuteEx is used.</p>
<h4>Fixes:</h4>
<p>Fixed handle leaks in RegRead.</p>
<p>Fixed <code>x.y++</code> and similar to assign an empty string if x.y is non-numeric.</p>
<p>Fixed SendInput Win+L workaround causing Win key to "stick down".</p>
<p>Fixed Ahk2Exe auto-including the wrong file if an auto-include used <a href="commands/_Include.htm">#Include &lt;Lib&gt;</a>.</p>

<h2 id="v1.1.05.06">1.1.05.06 - 2011年12月31日</h2>
<p>Fixed inc (++) and dec (--) having no effect when used on an object field containing a string.</p>
<p>Fixed inc (++) and dec (--) to cause a warning when used on an uninitialized variable.</p>

<h2 id="v1.1.05.05">1.1.05.05 - 2011年12月17日</h2>
<p>Fixed <code>continue <i>n</i></code> misbehaving when an inner loop has no braces.</p>
<p>Fixed <code>RegExMatchObject[Name]</code> to work correctly with duplicate names.</p>

<h2 id="v1.1.05.04">1.1.05.04 - 2011年12月5日</h2>
<p>Fixed: Selected sub-command of ControlGet was unreliable on x64.</p>
<p>Fixed: CPU was maxed out while waiting if an underlying thread displayed a dialog (and possibly in other cases).</p>

<h2 id="v1.1.05.03">1.1.05.03 - 2011年11月30日</h2>
<p>Fixed <code>Loop ... Until VarContainingObject</code>.</p>

<h2 id="v1.1.05.02">1.1.05.02 - 2011年11月20日</h2>
<p>Fixed false detection of end-of-file when loading a compiled script in some cases.</p>
<p>Fixed SendInput to automatically release modifier keys when sending special characters or {U+xxxx} (which was broken by v1.1.00.01).</p>
<p>Fixed ComObjConnect to filter out non-dispatch interfaces instead of allowing the script to crash.</p>
<p>Fixed <code>new %VarContainingClassName%()</code>.</p>

<h2 id="v1.1.05.01">1.1.05.01 - 2011年10月16日</h2>
<p>Fixed class declarations to allow directives such as #Include.</p>

<h2 id="v1.1.05.00">1.1.05.00 - 2011年10月8日</h2>
<p>Added <a href="commands/CoordMode.htm">Client coordinate mode</a>.</p>
<p>Added <a href="commands/RegExMatch.htm#ObjectMode">object output mode</a> for RegExMatch and RegEx callouts.</p>
<p>Added <a href="Functions.htm#SuperGlobal">super-global</a> declarations, which avoid the need to repeat global declarations.</p>
<p><strong>Breaking change:</strong> Class declarations such as <code>Class c</code> now create a super-global variable instead of an ordinary global.</p>
<p>Added more detail to unhandled exception error dialogs.</p>
<p>Changed <code><a href="commands/Gui.htm#Owner">Gui +Owner</a></code> to work even after the GUI is created.</p>
<p>Changed instance var declarations in class definitions to avoid leaving empty key-value pairs in the class object.</p>
<p>Changed #Include to use standard error message formatting when it fails (more detail; also respects ErrorStdOut).</p>
<p>Changed <a href="commands/Throw.htm">Throw</a> to throw an Exception object by default when its parameter is omitted.</p>
<p>Changed format of runtime error messages slightly to improve consistency and code size.</p>
<p>Modified PCRE to use UTF-16 for input on Unicode builds, for performance.</p>
<p>Upgraded PCRE to 8.13.</p>
<p>Fixed thread not exiting as intended when an assignment in an expression fails.</p>
<p>Fixed #MaxMem preventing assignments to variables which don't require expansion.</p>
<p>Fixed inability of Try/Catch to catch COM errors.</p>
<p>Fixed GuiControlGet incorrectly treating parameter #2 as invalid in some cases.</p>
<p>Fixed input vars being resolved too soon, allowing them to be invalidated by an expression later on the same line.</p>
<p>Fixed RegEx callouts not causing matching to abort when an exception is thrown.</p>
<p>Fixed DllCall setting ErrorLevel to -4 when it should be -3.</p>
<p>Fixed While appearing twice in ListLines for its first iteration.</p>
<p>Fixed Try/Catch to allow If/Loop/For/While with no enclosing block.</p>
<p>Fixed enumerator object not being released when Until is used to break a For-loop.</p>

<h2 id="v1.1.04.01">1.1.04.01 - 2011年9月15日</h2>
<p>Fixed FileRemoveDir setting ErrorLevel incorrectly.</p>

<h2 id="v1.1.04.00">1.1.04.00 - 2011年9月11日</h2>
<p><strong>This release contains a number of potentially script-breaking changes.</strong></p>
<p>Added exception handling support: <a href="commands/Try.htm">try</a>/<a href="commands/Catch.htm">catch</a>/<a href="commands/Throw.htm">throw</a> and <a href="commands/Throw.htm#Exception">Exception()</a>.</p>
<p>Added StdOut mode for <a href="commands/_Warn.htm">#Warn</a>.</p>
<p>Added <a href="commands/Gui.htm#GuiHwndOutputVar">Gui +HwndVARNAME</a> option.</p>
<p>Added <a href="commands/Gui.htm#New">Gui, New [, Options, Title]</a>.</p>
<p>Added automatic support for keyboard accelerators such as Ctrl+O in <a href="commands/Gui.htm#Menu">Gui menus</a>.</p>
<p>Changed handling of <code>#Include &lt;Lib&gt;</code> when the /iLib command-line switch is present to resolve a <a href="https://github.com/fincs/Ahk2Exe/issues/4">problem</a> with Ahk2Exe.</p>
<p>Changed GuiControl to retain the Progress control's current value when its style is changed.</p>
<p>Changed GuiControl and GuiControlGet to allow a HWND to be passed in the <em>ControlID</em> parameter.</p>
<p>Removed the 1GB limit from FileRead.</p>
<p>Improved error detection:</p>
<ul>
  <li><code>Hotkey, If, <i>Expression</i></code>, where <i>Expression</i> does not match an existing #If expression, is caught at load-time when possible.</li>
  <li><code>Hotkey, If<i>Something</i></code>, where <i>Something</i> is invalid, is caught at load-time.</li>
  <li>Class definitions with missing braces are detected as errors.</li>
  <li>If a function call is used on the first line of a class definition, it is now correctly treated as an error.</li>
  <li>GroupAdd now shows an error message when the group name is blank, instead of silently exiting the thread.</li>
  <li>Removed some redundant "unset var" warnings which appeared when using the OutputDebug or StdOut warning modes.</li>
  <li>If an unrecognized option is used with <a href="commands/Gui.htm#Options">Gui</a>, <a href="commands/Gui.htm#Show">Gui Show</a>, <a href="commands/Gui.htm#New">Gui New</a> or <a href="commands/GuiControl.htm">GuiControl</a>, an error message is shown and the thread exits unless <a href="commands/Try.htm">try</a> is used. This validation is not done at load-time due to complexity (it is common for the option parameters to contain variable references).</li>
  <li>RegRead, RegWrite and RegDelete now set A_LastError to the result of the operating system's GetLastError() function.</li>
  <li><a href="commands/Gui.htm#LastFoundExist">+LastFoundExist</a> is now treated as an error if it is combined with another option (<a href="commands/Gui.htm#LastFound">+LastFound</a> should be used in that case).</li>
</ul>
<p>Fixed a <a href="http://www.autohotkey.com/forum/topic76133.html">bug</a> affecting recursive variadic functions.</p>

<h2 id="v1.1.03.00">1.1.03.00 - 2011年8月28日</h2>
<p>Added support for GUI names.</p>
<p>Added support for identifying a GUI by its HWND.</p>
<p>Added <code>+Parent%ParentGui%</code> Gui option.</p>
<p>Added support for external windows as Gui owners via <code>+Owner%HWND%</code>.</p>
<p>Added Name sub-command for GuiControlGet.</p>
<p>Added support for ActiveX controls via the Gui command.</p>
<p>Fixed: Empty hotkey control returned "vk00".</p>
<p>Fixed: Crashes and memory leaks related to COM events/ComObjConnect.</p>
<p>Fixed: <code>GuiControlGet OutputVar, Subcmd, <b>%OutputVar%</b></code> always failed.</p>
<p>Changed "Missing (/[/{" error messages to "Unexpected )/]/}" for greater clarity.</p>
<p>Changed ListLines to display While and Until lines which are executed each iteration.</p>
<p>Changed ~= to have higher precedence than =/!=/&lt;/&gt;/&lt;=/&gt;= but lower than concat, and added it to the documentation.</p>

<h2 id="v1.1.02.03">1.1.02.03 - 2011年8月21日</h2>
<p>Fixed (Debugger): numchildren attribute did not include Object.Base.</p>

<h2 id="v1.1.02.02">1.1.02.02 - 2011年8月20日</h2>
<p>Fixed: Variable capacity was capped at 2GB on x64 builds.</p>
<p>Fixed: Last Found Window not set by <code>#if WinExist(T)</code>.</p>

<h2 id="v1.1.02.01">1.1.02.01 - 2011年8月13日</h2>
<p>Changed A_PriorKey to exclude key-up events.</p>
<p>Fixed process name/path retrieval in certain cases, including:</p>
<ul>
  <li>Retrieving name/path of a 64-bit process from a 32-bit script.</li>
  <li>Retrieving name/path of an elevated process from a non-elevated process (UAC).</li>
</ul>

<h2 id="v1.1.02.00">1.1.02.00 - 2011年8月6日</h2>
<p>Added TV_SetImageList().</p>
<p>Characters which require non-standard shift states 16 and 32 now use a fallback method instead of producing the wrong keystrokes.</p>
<p>Revised handling of dead keys to solve problems which occur when multiple scripts with hotstrings are active.</p>

<h2 id="v1.1.01.00">1.1.01.00 - 2011年6月30日</h2>
<p>Added support for instance variables in class definitions, using simple assignment syntax.</p>
<p><b>Removed</b> <code>var</code> keyword used in class definitions; use <code>static</code> instead.</p>
<p>Added new built-in variables: A_ScriptHwnd and A_PriorKey.</p>
<p>Added new built-in functions: GetKeyName(), GetKeyVK(), GetKeySC() and IsByRef().</p>
<p>Added new sub-command: WinGet, OutputVar, ProcessPath.</p>
<p>Added the capability to specify a window by process name or path: <code>ahk_exe %Name%.exe</code> or <code>ahk_exe %FullPath%</code>.</p>
<p>Optimized ProcessName sub-command of WinGet.</p>
<p>Changed SetTimer to use A_ThisLabel if Label is omitted.</p>
<p>Updated ComObjConnect() to support using an object in place of a function name prefix.</p>
<p>Improved ComObjConnect() to allow the prefix/object to be updated without first disconnecting.</p>
<p>Improved parsing of continuation sections to allow expressions like <code>(x.y)[z]()</code> without escaping "(".</p>
<p>Replaced the method used to store script text in 32-bit compiled scripts; now consistent with 64-bit.</p>
<p>Fixed detection of AltGr in the active window's keyboard layout (on Unicode builds).</p>
<p>Fixed SendInput applying a redundant LCtrl-up some time after AltGr-up.</p>



<h2 id="v1.1.00.01">1.1.00.01 - 2011年6月17日</h2>
<p>Fixed: Modifier keys weren't auto-released when sending special chars.</p>
<p>Fixed: Scancode/modifier-key mapping conflicts such as sc1xx vs ^sc0xx.</p>
<p>Fixed: $ and #UseHook had no effect if used only on the second or subsequent instance(s) of a hotkey.</p>
<p>Fixed: Potential crash when returning a value from a __Delete meta-function.</p>
<p>Fixed: "Uninitialized variable" warnings were triggered by the debugger.</p>
<p>Changed: <code>base.Method()</code> no longer triggers a default meta-function or a warning.</p>
<p>Changed: <code>Gui +(Ex)Style</code> no longer hides/shows the Gui.</p>
<p>Changed the debugger to report type="undefined" for uninitialized variables.</p>
<p>Added check to avoid incorrectly sending keystrokes for characters which actually require the "hankaku" key.</p>
<p>Added support for integers as class variable names.</p>
<p>Added "Static" keyword for declaring class variables.</p>

<h2 id="v1.1.00.00">1.1.00.00 - 2011年5月1日</h2>
<h4>New features:</h4>
<p>Implemented basic <a href="Objects.htm#Custom_Classes">class definition syntax</a>.</p>
<p>Implemented the <code><a href="Objects.htm#Custom_NewDelete">new</a></code> keyword for creating a derived object.</p>
<p>Added <a href="commands/Func.htm">Func()</a> for retrieving a reference to an existing function and improved <a href="commands/IsFunc.htm">IsFunc</a> to recognize <a href="Objects.htm#Function_References">function references</a>.</p>
<p>Added support for <code>++</code> and <code>--</code> with object fields, such as <code>x.y[z]++</code>.</p>

<h4>Changes:</h4>
<p>Changed __Delete to not trigger __Call.</p>
<p>Changed OnClipboardChange to use AddClipboardFormatListener when available (i.e. on Windows Vista and later) to improve reliability.</p>
<p>Auto-concat with <code>(</code> is more selective, so some invalid expressions like <code>12(34)</code> will no longer work.</p>

<h4>Fixes:</h4>
<p>Fixed <code>SetTimer Label, -0</code> to be treated as "run-once, very soon".</p>
<p>Fixed A_MyDocuments etc. to use SHGetFolderPath instead of undocumented registry keys.</p>
<p>Fixed non-empty ExcludeText causing windows with no text to be excluded.</p>

<h2 id="v1.0.97.02">1.0.97.02 - 2011年4月14日</h2>
<p>Fixed misinterpretation of comma as an arg delimiter when enclosed in <code>{}</code> in an expression.</p>
<p>Fixed For-loop to set A_Index only after the <i>Expression</i> arg is evaluated, so that the outer loop's value can be used.</p>
<p>Fixed default script location to be based on the directory containing the EXE (as documented), not the working directory.</p>
<p>Improved load-time validation to detect invalid attempts to jump out of a function with Goto.</p>

<h2 id="v1.0.97.01">1.0.97.01 - 2011年4月2日</h2>
<p>Fixed the 64-bit build to not truncate HWNDs or SendMessage/PostMessage params to 32 bits.</p>
<p>Fixed <code>*/::</code> being treated as an invalid hotkey (broken since L54).</p>
<p>Fixed the icons.</p>
<h2 id="v1.0.97.00">1.0.97.00 - 2011年3月28日</h2>
<p>Added <code>{key: value}</code> as syntax sugar for <code>Object("key", value)</code>.</p>
<p>Added <code>[x, y, z]</code> as syntax sugar for <code>Array(x, y, z)</code>, which is a new function equivalent to  <code>Object(1, x, 2, y, 3, z)</code>.</p>
<p>Added slight optimization: resolve any reference to True, False, A_PtrSize or A_IsUnicode in expressions at load-time.</p>
<p>Fixed hotkey parser to treat <code>x & ^y</code> as an error instead of ignoring <code>^</code>.</p>

<h2 id="v1.0.96.00">1.0.96.00 - 2011年3月21日</h2>
<h4><b>New features:</b></h4>
<p><a href="commands/ComObjQuery.htm">ComObjQuery</a>: Queries a COM object for an interface or service.</p>
<p><a href="commands/ComObjFlags.htm">ComObjFlags</a>: Retrieves or changes flags which control a COM wrapper object's behaviour.</p>
<p><a href="commands/ComObjCreate.htm">ComObjCreate</a> allows non-dispatch objects to be created if an interface identifier (IID) is given.</p>
<p><a href="commands/ComObjArray.htm">COM arrays</a> support for-loops and the Clone() method.</p>
<p>ListVars shows the inner variant type and value of each COM wrapper object, in addition to the wrapper's address.</p>
<h4><b>Changes:</b></h4>
<p>When a literal integer or variable containing both a numeric string and cached binary integer is assigned to a field of an object, an integer is stored instead of a string. This particularly benefits scripts calling COM methods which accept integers but not strings, or have different behaviour depending on the type of value.</p>
<p>NULL values are now allowed with ComObjParameter for the VT_UNKNOWN and VT_DISPATCH types.</p>
<p>Improved support for Common Language Runtime (.NET) objects via COM.</p>
<p>FileRecycle should now warn before deleting a file which is too large to recycle.</p>
<p>When a SafeArray created with ComObjArray is assigned to an element of another SafeArray, a separate copy is created. This prevents the script from crashing due to a second attempt at "destroying" the array. ComObjFlags allows this behaviour to be avoided.</p>
<h4><b>Fixes:</b></h4>
<p>Assigning to a COM array of VT_DISPATCH or VT_UNKNOWN crashed the script.</p>
<p>Break and Continue were tolerated outside of loops in some cases.</p>
<p>Standalone carriage-return (`r) was not correctly interpreted as end-of-line.</p>
<p>MouseMove miscalculated negative coordinates with the Input and Event send modes.</p>
<p>Selecting <i>Edit This Script</i> from the tray menu or using the Edit command crashed the script (broken by v1.0.95).</p>
<p>Error dialogs pointed at irrelevant lines of code in some cases.</p>

<h2 id="v1.0.95.00">1.0.95.00 - 2011年3月12日</h2>
<p>All file I/O has been heavily optimized.</p>
<p>Added <a href="commands/_Warn.htm">#Warn</a> to assist with debugging; initial design by <a href="http://www.autohotkey.com/forum/profile.php?mode=viewprofile&amp;u=48847">ac</a>.</p>
<p>By default, if <i>name_var</i> contains a function name, <code>name_var.()</code> calls the function. This can be overidden via the <a href="Objects.htm#Default_Base_Object">default base object</a>, as before.</p>
<p>Run supports verbs with parameters, such as <code>Run *RunAs %A_ScriptFullPath% /Param</code>.</p>
<p>If an operator which can accept either one operand (<code>&amp;x</code>) or two <i>numeric</i> operands (<code>x & y</code>) follows a quoted literal string, auto-concat occurs and the operator is applied only to the right-hand operand. This is because quoted literal strings are always considered non-numeric and are therefore not valid input for numeric operators. For example, expressions like <code>"x" &amp;y</code> and <code>"x" ++y</code> now work.</p>
<p><b>Fixed:</b></p>
<ul>
<li>Wildcard hotkeys were not respecting modifiers such as <code>^!+</code> in specific cases.</li>
<li>File.Pos returned garbage for non-seeking file types; now it returns -1.</li>
<li>File.AtEOF was incorrectly true in some cases.</li>
<li>COM wrapper objects left A_LastError unset in some cases.</li>
<li>Gui submenu icons did not work on Windows 2000/XP/Server 2003.</li>
<li>SplashImage clipped the image if height > width.</li>
<li>ComObjConnect did not alert when the first parameter is invalid.</li>
<li>SplashImage now uses GDI+ only when the other methods fail, for compatibility.</li>
<li>Tilde in <code>~x::</code> now affects <code>x & y::</code> in the same way that <code>~x & z::</code> would, instead of having no effect.</li>
<li>A_PriorHotkey and A_TimeSincePriorHotkey now have the expected values when used with #If.</li>
<li>RegExReplace did not advance through the string correctly after a match failure if the string contained non-ASCII characters.</li>
</ul>
<h2 id="v1.0.92.02">1.0.92.02 - 2011年1月19日</h2>
<p>Fixed a memory leak which occurred when the return value of an object invocation or built-in function was not used, such as <code>file.ReadLine()</code> or <code>SubStr(x,y,z)</code> alone on a line.</p>
<p>Replaced the fix from v1.0.92.01 with a better fix, which also fixes <code>k::MsgBox(),x:=y</code> and doesn't break <code>if()</code>.</p>
<h2 id="v1.0.92.01">1.0.92.01 - 2011年1月18日</h2>
<p>Changed: FileCreateDir now sets A_LastError.</p>
<p>Fixed: <code>GuiControl()</code> or similar was sometimes misinterpreted as a command.</p>

<h2 id="v1.0.92.00">1.0.92.00 - 2011年1月13日</h2>
<p>Added support for compound assignments with objects, such as <code>x.y += z</code>.</p>
<p>Improved IniWrite in Unicode builds to prevent an empty line from appearing at the top of each new file.</p>
<p>Improved the parser to be more permissive about what can follow <code>{</code>/<code>}</code>/<code>Else</code>, especially when combined.</p>

<h2 id="v1.0.91.05">1.0.91.05 - 2011年1月1日</h2>
<p>Fixed: Cleanup code in COM method calls was freeing the wrong parameters.</p>
<p>Fixed (ANSI): DllCall set incorrect length for wstr parameters on output.</p>
<p>Fixed: Variadic function calls were unstable when param object was empty.</p>

<h2 id="v1.0.91.04">1.0.91.04 - 2010年12月29日</h2>
<p>Fixed (Unicode): RegExReplace omitted all text up to StartingPosition (broken by v1.0.90.00).</p>

<h2 id="v1.0.91.03">1.0.91.03 - 2010年12月27日</h2>
<p>Fixed: RegEx callout subpattern vars - broken by v1.0.90.00.</p>

<h2 id="v1.0.91.02">1.0.91.02 - 2010年12月26日</h2>
<p>COM: Added protection against NULL IDispatch/IUnknown pointers.</p>
<p>COM: Skip QueryInterface for IDispatch if VT_DISPATCH is passed explicitly.</p>
<p>Minor fix for maintainability: <code>obj.field := var</code> now correctly yields SYM_STRING, not SYM_OPERAND.</p>

<h2 id="v1.0.91.01">1.0.91.01 - 2010年12月24日</h2>
<p>Fixed: Unexpected results with <code>File.Write(Str)</code> after text-reading.</p>
<p>Fixed: UTF BOM check caused unexpected results in files without a BOM.</p>
<p>Fixed (ANSI): Parsing loops and <code>File.ReadLine()</code> treated <code>Chr(255)</code> as EOF.</p>
<p>Fixed (Unicode): RegExReplace errors where the UTF-8 and UTF-16 lengths differed.</p>
<p>Fixed: Disabling the last hook hotkey breaks Input.</p>
<p>Added: Simple optimization for RegExMatch/Replace.</p>

<h2 id="v1.0.91.00">1.0.91.00 - 2010年12月21日</h2>
<p><i>All changes in this release are COM-related.</i></p>
<p>Added: <a href="commands/ComObjError.htm">ComObjError</a> now returns the previous setting.</p>
<p>Added: <a href="commands/ComObjType.htm">ComObjType(co)</a> and <a href="commands/ComObjValue.htm">ComObjValue(co)</a>.</p>
<p>Added: <a href="commands/ComObjActive.htm">ComObjMissing()</a>.</p>
<p>Added: <a href="commands/ComObjArray.htm">ComObjArray()</a> and basic SAFEARRAY support.</p>
<p>Added: "Take ownership" parameter for <a href="commands/ComObjActive.htm">ComObjParameter()</a>.</p>
<p>Changed: Values passed to COM functions via ComObjParameter are no longer freed in the process of calling the function.</p>
<p>Changed: <code>ComObj.x()</code> now falls back to PROPERTYGET if member 'x' is not found. This fixes for-loops for some objects.</p>
<p>Changed: Wrap unhandled variant types in an object rather than returning integer value.</p>
<p>Changed: Manage VT_UNKNOWN/VT_ARRAY lifetime automatically, by default.</p>

<h2 id="v1.0.90.00">1.0.90.00 - 2010年11月27日</h2>
<p>Fixed: UrlDownloadToFile in Unicode builds on Windows &lt; 7.</p>
<p>Fixed: Upper-ANSI characters were sent as Alt+0 in ANSI build.</p>
<p>Fixed: File.Pos was incorrect after attempting to read past EOF.</p>
<p>Fixed: Escape sequences in #If expressions and static initializers.</p>
<p>Fixed: ClipboardAll sometimes crashed the script with certain formats.</p>
<p>Fixed: Transform HTML calculated length incorrectly for &amp;#NNN; entities.</p>
<p>Fixed: VarSetCapacity now correctly ignores #MaxMem for ByRef variables.</p>
<p>Fixed: <code>FileAppend,,file.txt</code> set ErrorLevel=1 even on success.</p>
<p>Fixed: Match length was miscalculated for RegEx callouts with the P) option.</p>
<p>Integrated Sean's improvements to number handling in COM interop.</p>
<p>Optimized RegExReplace and RegExMatch in Unicode builds.</p>

<h2 id="L61">Revision 61 - 2010年10月3日</h2>
<p>Added: <code>ObjClone(Object)</code>, forgotten when <code>Object.Clone()</code> was implemented.</p>
<p>Added: Support for RegEx Unicode properties in Unicode builds. Also upgraded PCRE to 8.10.</p>
<p>Added: <code>Object.Remove(int, "")</code> removes <code>Object[int]</code> without affecting other keys.</p>
<p>Changed: <code>ComObj.xyz()</code> is now always treated as a method-call.</p>
<p>Changed: <code>Var := 123</code> is now left as an expression, for consistency. This makes <code>Var := 123</code> and <code>Var := (123)</code> equivalent, whereas previously the former assigned only a string and the latter assigned both a string and a cached binary integer. In particular, this avoids some confusing type mismatch errors with COM objects.</p>
<p>Fixed: Dynamic variadic calls to functions with mandatory parameters.</p>
<p>Fixed: The final parameter of an assume-global variadic function had to be explicitly declared local.</p>
<p>Fixed: Static initializers interfering with setting of breakpoints.</p>
<p>Fixed: More pointer size-related errors with PCRE callouts on x64 builds.</p>
<p>Fixed: Input with 'M' option treated Ctrl-M (<code>`r</code>) as Ctrl-J (<code>`n</code>).</p>
<p>Fixed: <code>Object.Remove(n)</code> returned 0 (not "") if <code>Object[n]</code> didn't exist.</p>

<h2 id="L60">Revision 60 - 2010年9月24日</h2>
<p>Added: <a href="objects/File.htm#Encoding">File.Encoding</a> for changing or retrieving the codepage in use by a File object.</p>
<p>Added: <a href="Functions.htm#Variadic">Variadic functions and function-calls</a> and <a href="commands/RegisterCallback.htm#Indirect">indirect mode</a> for callbacks.</p>
<p>Added: <a href="objects/Object.htm#Clone">Object.Clone()</a></p>
<p>Changed: ByRef parameters no longer require the caller to supply a variable.</p>
<p>Changed: <code>Obj.foo := ""</code> now frees foo's contents as originally intended (but still doesn't remove the field).</p>
<p>Changed: OnMessage functions now tolerate optional and ByRef parameters.</p>
<p>Changed: RegisterCallback now enables execute access on callbacks in 32-bit builds (already did in 64-bit builds).</p>
<p>Changed: RegisterCallback now treats explicit ParamCount="" as omitted.</p>
<p>Fixed: For-loop was treating non-expression "0" as true for scripted enumerators.</p>
<p>Fixed: ComEvent (ComObjConnect) not working on the ANSI build.</p>
<p>Fixed: ComEvent (ComObjConnect) not correctly backing up/restoring local vars when calling a function which is already running.</p>
<p>Fixed: Buffer overflow in A_EndChar when there is no end char.</p>
<p>Fixed: Func->mNextFunc not inititialized to NULL (used only by LowLevel scripts).</p>
<p>Debugger: Added the capability to retrieve an object's contents (with a supported debugger client).</p>
<p>Debugger: Fixed a few bugs.</p>

<h2 id="L59">Revision 59 - 2010年9月12日</h2>
<p>Fixed: #If <i>expression</i> should now evaluate each <i>expression</i> at most once per keypress in all cases.</p>
<p>Changed: SplashImage uses common image-loading routines; now supports PNG and similar, but results 5月 differ from before for icon files.</p>
<p>Added: <code><a href="commands/For.htm">For</a> x,y in z</code>.</p>
<p>Added: <code>Loop .. <a href="commands/Until.htm">Until</a> <i>expression</i></code>, usable with any Loop or For-loop.</p>
<p>Added: Named loops; <code><a href="commands/Continue.htm">continue</a> outer_loop</code>, <code><a href="commands/Break.htm">break</a> 2</code>, etc.</p>
<p>Debugger: Encode stdout and stderr packets as UTF-8.</p>
<p>Debugger: Allow user to Abort, <b>Retry</b> or Ignore when the initial connection fails.</p>
<p>Debugger: Allow <a href="Scripts.htm#debug_attach">attaching a debugger client</a> by sending the script a registered window message.</p>
<p>Debugger: Allow detaching debugger client by sending the "detach" DBGp command.</p>

<h2 id="L58">Revision 58 - 2010年9月5日</h2>
<p>Added: <code>static var := expression</code>.</p>
<h2 id="L57">Revision 57 - 2010年9月4日</h2>
<p>Fixed Str*, WStr* and AStr* DllCall return types on x64.</p>
<p>Added functionality to <a href="Functions.htm#InStr">InStr</a> to bring it in line with StringGetPos:</p>
<ul>
  <li>If <i>StartingPos</i> is negative, the search is conducted right-to-left beginning at that offset from the end.</li>
  <li>An additional parameter is available to specify which <i>occurrence</i> of the string to find.</li>
</ul>
<p>Added <code><a href="commands/_Include.htm">#include</a> &lt;<i>LibName</i>&gt;</code> for explicitly including a script from a <a href="Functions.htm#lib">function library folder</a>.</p>
<p>Added functionality to <a href="commands/IniRead.htm">IniRead</a> and <a href="commands/IniWrite.htm">IniWrite</a> allowing an entire section to be read or written.</p>
<p>Added functionality to <a href="commands/IniRead.htm">IniRead</a> allowing a list of section names to be retrieved.</p>
<p>Added support for <a href="commands/Run.htm#verbs">custom verbs</a> to Run/RunWait: <code>Run *<i>verb file</i></code>.</p>
<p>Made <a href="Compat.htm#Run">improvements</a> to the way Run/RunWait extracts the action and its parameters from the <i>Target</i> parameter.</p>
<p>Changed <a href="commands/NumGet.htm">NumGet</a>/<a href="commands/NumPut.htm">NumPut</a> to allow <i>Offset</i> to be omitted entirely since <i>Type</i> is always non-numeric.</p>
<p>Removed the restriction that a label can't point to the end of a block.</p>

<h2 id="L56">Revision 56 - 2010年8月29日</h2>
<p>Added support for x64 compiled scripts. Requires Ahk2Exe_L and x64 AutoHotkeySC.bin.</p>
<p>Fixed: Deref operator (<code>*addr</code>) rejected addresses outside 32-bit range.</p>
<p>Fixed: <code>#If <i>expression</i></code> memory allocation error on x64.</p>
<p>Fixed: Custom hotstring end chars with code points greater than U+00FF.</p>
<p>Fixed: Special characters being sent out of sequence by SendInput/Play.</p>
<p>Fixed: <code>*/</code> being discarded in continuation sections (see L54).</p>

<h2 id="L55">Revision 55 - 2010年8月19日</h2>
<p>Fixed: GroupActivate not setting ErrorLevel=1 if no Label was specified.</p>
<p>Fixed: Tab controls in x64 build.</p>
<p>Fixed: String-copy mode of StrPut when length is omitted; broken by L53.</p>
<p>Fixed: Data-alignment issues in x64 builds.</p>
<p>Changed: Set A_LastError for more File* commands to assist debugging.</p>
<p>Includes FileAppend, FileRead, FileReadLine, FileDelete, FileCopy, FileMove, FileGetAttrib/Time/Size/Version and FileSetAttrib/Time.</p>
<p>Excludes FileCopyDir, FileRecycle, FileMoveDir, FileRemoveDir, FileRecycleEmpty, FileCreateDir and FileInstall as the APIs used do not consistently set or return a Win32 error code.</p>

<h2 id="L54">Revision 54 - 2010年8月15日</h2>
<p>Fixed: RunAs in Unicode build. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=372973#372973">[jackieku]</a></p>
<p>Fixed: RegisterCallback in x64 build. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=374773#374773">[fincs]</a></p>
<p>Fixed: Executables failing to run on Win2k and WinXP prior to SP2. Win2k requires SP4 and updates (probably <a href="http://support.microsoft.com/kb/816542">KB 816542</a>). XP not tested.</p>
<p>Fixed: Dialogs such as MsgBox became unresponsive when interrupted by another script thread. Message filter/workaround added in L45 had to be removed. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=358029#358029">[Bug report]</a></p>
<p>Fixed: Multi-byte characters in default ANSI codepage; this was also causing a memory leak. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=375342#375342">[Bug report]</a></p>
<p>Fixed: ComObject now allows purely numeric property/method names. <a href="http://www.autohotkey.com/forum/viewtopic.php?p=375393#375393">[Bug report]</a></p>
<p>Enhanced usability and capabilities of FileOpen/File object.</p>
<ul>
  <li>FileOpen's <i>Flags</i> parameter accepts a human-readable string of flags.</li>
  <li>FileOpen's "update" mode has been renamed "read/write" and now creates the file if it didn't already exist.</li>
  <li>FileOpen sets A_LastError as appropriate.</li>
  <li><code>File := FileOpen(handle,"h")</code> wraps an existing file handle in an object.</li>
  <li><code>File.Seek(n)</code> defaults to SEEK_END when n is negative.</li>
  <li><code>File.Pos</code> (or <code>File.Position</code>) can be used in place of Tell and Seek.</li>
  <li><code>File.Pos</code>, <code>File.Length</code>, <code>File.AtEOF</code> and <code>File.__Handle</code> can be used without empty parentheses<code>()</code>.</li>
  <li><code>File.Length</code> can be set, as in <code>File.Length:=n</code>.</li>
  <li><code>File.Read<i>Num</i>()</code> and <code>File.Write<i>Num</i>(n)</code> read or write a number, where <i>Num</i> is a NumGet-compatible type name.</li>
  <li><code>File.WriteLine(s)</code> is equivalent to <code>File.Write(s "`n")</code>, for symmetry with <code>File.ReadLine()</code>.</li>
  <li><code>File.Read()</code> reads and returns the remainder of the file when used without parameters.</li>
  <li>File object now returns "" for unrecognized methods and invalid syntax rather than the numeric <i>address</i> of "".</li>
</ul>
<p>Changed: GroupAdd's Label parameter now applies to the whole group. <a href="http://www.autohotkey.com/forum/topic61362.html">[Discussion]</a></p>
<p>Changed: GroupActivate sets ErrorLevel on success/failure. (Same thread as above.)</p>
<p>Changed: <code>*/</code> at the beginning of a line is ignored if there was no <code>/*</code>. <a href="http://www.autohotkey.com/forum/topic61109.html">[Discussion]</a></p>
<p>Removed ToCodePage and FromCodePage subcommands of Transform.</p>

<h2 id="L53">Revision 53 - 2010年8月8日</h2>

<p><b>Merged AutoHotkey64</b> - COM support and x64 compatibility.</p>
<p><b>x64</b> (<i>changes since AutoHotkey64</i>):</p>
<ul>
  <li>Fixed floating-point return values and exception handling for DllCall.</li>
  <li>Fixed RegEx callouts.</li>
  <li>Re-enabled GetProcAddress optimisation for DllCall.</li>
  <li>NumPut and NumGet default to "Int64" in x64 builds.</li>
</ul>
<p><b>COM</b> (<i>changes since AutoHotkey64</i>):</p>
<ul>
  <li>Allow ComObjParameter to wrap 64-bit values in 32-bit builds.</li>
  <li>Implemented more standard ref counting conventions in ComObjActive.</li>
  <li>Prevent extraneous AddRef for new ComObjects in certain cases.</li>
  <li>Don't treat pdispVal==NULL return value from Invoke as an error.</li>
  <li>Fail more predictably when given wrong type of object.</li>
  <li>Require explicit second param in ComObjType, don't assume "IID".</li>
  <li>Free local vars after ComEvent calls a function.</li>
  <li>Remove pVarResult param from ComEvent; use return value instead.</li>
  <li>Pass the original wrapper ComObject in each ComEvent call.</li>
  <li>Add context to ComError dialog; let the buttons make more sense.</li>
</ul>
<p>Implemented common syntax validation code for enumerators. <code>Enum[]</code> and <code>Enum.Next()</code> are now supported with or without parameters. <code>Enum[]:=val</code> and similar obscure forms which worked in AutoHotkey_COM/AutoHotkey64 are not allowed.</p>
<p>"Ptr" type is still signed (unlike AutoHotkey64), for maximum flexibility and consistency.</p>
<p><b>Other changes:</b></p>
<p>Added: <code>Object.<b>HasKey</b>(key)</code>.</p>
<p>Added: <code>Object(obj)</code> increments obj's reference count and returns its address.</p>
<p>Added: <code>ObjAddRef()</code> and <code>ObjRelease()</code>.</p>
<p>Fixed: A_ThisHotkey now has the expected value when used with #If.</p>
<p>Fixed: RunAs in Unicode build (fixed by jackieku).</p>
<p>Changed: Default script codepage for ANSI builds is now CP0 (ANSI).</p>
<p>Changed: <code>x.y[]</code> is now equivalent to <code>(x.y)[]</code> rather than <code>x["y"]</code>.</p>
<p>Changed: Built-in methods can now be called with or without the underscore prefix (e.g. <code>obj.MaxIndex()</code> or <code>obj._MaxIndex()</code>).</p>

<h2 id="L52">Revision 52 (again) - 2010年6月10日</h2>
<p>Added support for built-in and environment variables in double-derefs.</p>
<p>Improved support for multi-byte characters in certain codepages (previously only 932, 936, 949, 950 and 1361 were supported).</p>
<p>Fixed: StrPut failed for codepages which don't support WC_NO_BEST_FIT_CHARS, such as UTF-7.</p>
<p>Fixed: Double-deref as object - <code>literal%var%.literal</code>.</p>
<p>Fixed: <code>StrPut("", Encoding)</code> null-terminated an invalid address.</p>

<h2>Revision 52 - 2010年6月12日</h2>
<p>Fixed: ObjRemove's Key parameter is now optional, as with <a href="objects/Object.htm#Remove">Object._Remove</a>.</p>
<p>Fixed: Files were improperly locked while reading, unlike in older versions.</p>
<p>Fixed: Uppercase Hex format caused negative integers to become unsigned.</p>
<p>Fixed: RegExMatch was corrupting output array items when specific conditions were met. See <a href="http://www.autohotkey.com/forum/topic59120.html">bug report</a>.</p>

<h2 id="L51">Revision 51 - 2010年4月11日</h2>
<p>Changed: Use &lt;EXENAME&gt;.ahk instead of AutoHotkey.ini or AutoHotkey.ahk.</p>
<p>Changed: Default to UTF-8 for script files; override with /CPnnn.</p>
<p>Fixed: Unpause when the script exits so that object __Delete meta-functions can run.</p>

<h2 id="L50">Revision 50 - 2010年3月27日</h2>
<p>Improved flexibility of <a href="objects/Object.htm#Insert">Object._Insert</a>.</p>
<ul>
  <li><code>Object._Insert(x)</code> - inserts x at <code>_MaxIndex()="" ? 1 : _MaxIndex() + 1</code>.</li>
  <li><code>Object._Insert(i,x,y,z)</code> - inserts <code>x,y,z</code> at <code>i,i+1,i+2</code>.</li>
</ul>
<p>Improved flexibility of <a href="objects/Object.htm#Remove">Object._Remove</a>.</p>
<ul>
  <li><code>Object._Remove(k)</code> - removes and returns the value associated with k.</li>
  <li><code>Object._Remove()</code> - removes and returns the value at _MaxIndex().</li>
</ul>
<p>Added file share mode flags to FileOpen [by jackieku].</p>
<p>Fixed: 'P' option of RegExMatch incorrectly output 1 for subpatterns which did not match anything.</p>
<p>Fixed: <code>Object._SetCapacity(key,n)</code> was not null-terminating in some cases.</p>
<p>Fixed: StatusBarGetText returned only half of the text in Unicode builds.</p>

<h2 id="L49">Revision 49 - 2010年3月14日</h2>
<p>Added <a href="objects/Object.htm#NewEnum">obj._NewEnum()</a>.</p>
<p>Added <a href="objects/Object.htm">ObjMethod(obj)</a> for each built-in <code>obj._Method()</code>.</p>
<p>Changed: ObjSet/Get/Call can no longer be called/overridden by script.</p>
<p>Fixed: Potential crash caused by VK_PACKET check added in L48.</p>
<p>Fixed: Character codes in VK_PACKET events were potentially misinterpreted as scancodes.</p>
<p>Fixed: ExcludeText was ineffective after the first matching control.</p>

<h2 id="L48">Revision 48 - 2010年2月21日</h2>
<p>Fixed: Standalone <code>obj.()</code> was not recognized as a valid expression.</p>
<p>ControlSend now uses WM_CHAR to support characters which have no associated keycode.  For instance, this applies to "&#8230;" (en-US), "&#x221e;" in a Unicode build and <code>{U+221e}</code> in either build.</p>
<p>KeyHistory now shows the full 16-bit character code for VK_PACKET (VK=E7) events.  <a href="commands/Send.htm#Unicode">Send</a> 5月 indirectly cause these to be generated for Unicode characters.</p>

<h2 id="L47">Revision 47 - 2010年2月13日</h2>
<p>Fixed (Unicode): ControlGet,List with ListView controls.</p>

<h2 id="L46">Revision 46 - 2010年2月11日</h2>
<p>Added A_FileEncoding, which returns the current default file encoding.</p>
<p>Added <a href="commands/StrPutGet.htm">StrPut</a> and extended <a href="commands/StrPutGet.htm">StrGet</a> with additional features.</p>

<h2 id="L45">Revision 45 - 2010年2月8日</h2>
<p>Added _GetAddress; _SetCapacity/_GetCapacity 5月 now operate on a given field.  <a href="objects/Object.htm">[more info]</a></p>
<p>Added workaround for WM_PAINT infinite loop often caused by subclassing.</p>
<p>Allow <code>obj.()</code> as a means to call the default method of an object; equivalent to <code>obj[""]()</code>.</p>
<p>Dev: Added solution and project files for MSBuild 4.0 & VS2010.  <a href="http://github.com/Lexikos/AutoHotkey_L/commit/ed81ea089c223b46c883036c14454aa4386d3801">[more info]</a></p>
<p>Fixed (Unicode): 'Running' column in ListHotkeys.</p>

<h2 id="L44">Revision 44 - 2010年2月7日</h2>
<p>Fixed: Attempting to set "nothing" crashed the script. For instance, <code>x[]:=z</code>.</p>
<p>Fixed (Unicode): Unable to find default script (Documents\AutoHotkey.ahk).</p>
<p>Fixed (Unicode): A_Desktop, A_ProgramFiles and several other built-in variables which read their value from the registry caused strings to be incorrectly terminated.</p>
<p>Fixed (ANSI): Characters in the range 0x80-0xFF couldn't be found by InStr or StringReplace.</p>
<p>Changed (ANSI): Treat ToCodePage/FromCodePage like other unsupported/invalid subcommands.</p>

<h2 id="L43">Revision 43 - 2010年1月29日</h2>
<p>Fixed: obj.Func() resulting in a random integer when it should be an empty string.</p>

<h2 id="L42">Revision 42 - 2010年1月28日</h2>
<p>Merged with AutoHotkeyU.</p>
<p>Numerous bug-fixes and improvements, some relating to the merge.</p>

<h2 id="L41">Revision 41 - 2009年12月20日</h2>
<p>Fixed: Floating-point numbers were equivalent to an empty string when used as keys in objects.  They are now converted to numeric strings in the current <a href="commands/SetFormat.htm">float format</a>, as originally intended.</p>

<h2 id="L40">Revision 40 - 2009年12月13日</h2>
<p>Changed meta-functions and multi-param behaviour to improve flexibility.  Meta-functions are now invoked *before* searching for an appropriate field in each base object; however, values in x.base will override meta-functions defined in x.base.base.  Chaining meta-functions (inheritence) is now possible by avoiding "Return"</p>
<p>Improved Default Base functionality to be more consistent with real objects.</p>
<p>Changed (Debugger): While stepping through code, skip all braces except those which end a function.</p>
<p>Changed (Debugger): When stepping onto the hidden "Exit" at end of the script, consider it to be *below* the last physical line to avoid confusion.</p>

<h2 id="L39">Revision 39 - 2009年12月2日</h2>
<p>Fixed (Debugger): Error in Base64 decoding used by property_set.</p>

<h2 id="L38">Revision 38 - 2009年11月17日</h2>
<p>Added: <a href="commands/_MenuMaskKey.htm">#MenuMaskKey</a> directive to change which key is used to mask Alt/Win keyup events.  See <a href="http://www.autohotkey.com/forum/topic22378.html">this thread</a> for background information.</p>
<p>Changed: If <code>x[1,2]:=3</code> creates an object for <code>x[1]</code>, it's base is no longer automatically set to <code>x.base</code>.  See <a href="Objects.htm#Subclassing_aoa">the documentation</a> for a method of controlling this behaviour.</p>  

<h2 id="L37">Revision 37 - 2009年11月7日</h2>
<p>Added: Support for <code>obj[method_name](params)</code> object-call syntax.</p>

<h2 id="L36">Revision 36 - 2009年11月4日</h2>
<p>Changed: If <code>x.y</code> or similar is immediately followed by an open-bracket (<code>[</code>), the right-most identifier preceding the bracket is treated as the first parameter of the operation.  For instance, <code>a.b.c[d]</code> is equivalent to <code>ObjGet(a.b,"c",d)</code> and <code>x.y[z]:=v</code> is equivalent to <code>ObjSet(x,"y",z,v)</code>. Previously each sub-expression preceding a bracket was evaluated separately.</p>
<p>Changed: If a method-call such as <code>x.y()</code> is followed immediately by an assignment, the parentheses are treated as brackets. For instance, <code>x.y(z):=v</code> is now equivalent to <code>ObjSet(x,"y",z,v)</code>.</p>
<p>Fixed: If(expr) and While(expr) with no delimiting space or comma.</p>  

<h2 id="L35">Revision 35 - 2009年10月25日</h2>
<p>Fixed: Standalone expressions beginning with two or more "dots", such as <code>x.y.z()</code>. (Broken by L34.) Note that '(' or '[' or ':=' is still required.</p>

<h2 id="L34">Revision 34 - 2009年10月24日</h2>
<p>Changed: Setting a value within an object to an empty string now stores the empty string rather than removing the key-value pair from the object.  _Remove can still be used to completely remove key-value pairs.</p>
<p>Changed: Command names must be terminated with a space, tab or comma.  The following characters no longer bypass this requirement: <code>&lt;&gt;:+-*/!~&amp;|^[]</code>.  For instance, syntax errors such as <code>MsgBox&lt; foo</code> and <code>If!foo</code> are now caught at load-time.</p>
<p>Fixed: Return now properly handles expressions which result in a variable containing an object.  For instance, <code>Return x:=y</code>, <code>Return (x)</code>, <code>Return x,...</code> and similar should work now (<code>Return x</code> already worked).</p>
<p>Fixed: Multi-parameter get/set did not correctly support meta-functions for multiple objects (such as for <code>x</code> <i>and</i> <code>x[y]</code> in the expression <code>x[y,z]</code>).</p>
<p>Fixed: Cascading object-assignments such as the <code>x[y]:=z</code> in <code>r:=x[y]:=z</code> could not yield numbers or objects - broken by L33.</p>
<p>Fixed: <code>x._Remove(y)</code> crashed the script or removed the wrong item if <code>x</code> did not contain <code>y</code>.</p>
<p>Fixed: <code>x.=y</code>, <code>if x.y=...</code> and similar.  5月 affect other expressions.</p>
<p>Fixed: Standalone ternary expressions no longer requires spaces.  For instance, <code>x? F(1) : F(2)</code> is now allowed.</p>
<p>Debugger: On script exit, disconnect debugger *after* releasing objects to allow debugging of __Delete handlers.</p>

<h2 id="L33">Revision 33 - 2009年10月3日</h2>
<p>Fixed: Local variables were not automatically freed for functions which return objects or pure numbers.</p>
<p>Fixed: Two separate reference-counting errors related to ternary operator and Object().</p>
<p>Fixed: If a string returned by a scripted object function was assigned directly to a variable, the variable's length was set incorrectly.</p>
<p>Fixed: If the last operation in an expression retrieved a string from a temporary object, the object and string were freed prematurely.</p>
<p>Fixed: Numeric strings with special formatting were not preserved when returned from a function via a variable or passed to a recursive function.</p>
<p>Fixed: If the final result of an expression (other than for Return) is an object, correctly yield an empty string instead of silently aborting the thread.</p>
<p>Fixed: __Delete meta-functions sometimes overwrote temporary values in the deref buffer.</p>
<p>Added: An address retrieved via &amp;object 5月 be cast back into an object reference by using Object(address).</p>  

<h2 id="L32">Revision 32 - 2009年9月26日</h2>
<p>Fixed: Send/PostMessage crash when less than three parameters were specified.</p>

<h2 id="L31">Revision 31 - 2009年9月26日</h2>
<p>Added: Object/array support and numerous minor changes to make this possible.</p>
<p>Added: Support for While(expression) with no delimiting space.</p>
<p>Added: Trim, LTrim, RTrim.</p>
<p>Added: A ~= B; equivalent to RegExMatch(A, B).  5月 be removed in a future revision.</p>
<p>Fixed: An incompatibility with LowLevel.</p>
<p>Changed: Characters [, ] and ? are no longer valid in variable names.  Consequently, ? (ternary) no longer requires a space on either side.</p>
<p>Changed: Optional parameters 5月 now be omitted at any position in the parameter list of a non-dynamic function call. Since this works by automatically inserting the parameter's default value at load-time, it is not supported or allowed for dynamic function-calls.</p>
<p>Debugger: Various minor changes to make program flow easier to follow while stepping through code.</p>
<p>Optimization: If DllCall's first parameter is a literal string which identifies a function already present in memory, it is replaced with the actual address of the function.</p>
<p>Updated from v1.0.48.03 to v1.0.48.04.</p>

<h2 id="L30">Revision 30 - 2009年5月31日</h2>
<p>Updated from v1.0.48.02 to v1.0.48.03.</p>

<h2 id="L29">Revision 29 - 2009年5月2日</h2>
<p>All supported image formats 5月 now be used as menu icons.  Currently it is necessary to specify "actual size" when setting the icon to preserve transparency on Windows Vista and later. For example:</p>
<pre>Menu, Icon, MenuItemName, Filename.png,, 0</pre>  

<h2 id="L28">Revision 28 - 2009年5月2日</h2>
<p>Improved average-case performance of dynamic function calls by implementing binary search for function name look-ups. This change also applies to other areas, such as load-time resolution of function references in expressions and run-time resolution by OnMessage, RegisterCallback, etc.</p>  

<h2 id="L27">Revision 27 - 2009年4月26日</h2>
<p>Updated from v1.0.48.00 to v1.0.48.02.</p>  

<h2 id="L26">Revision 26 - 2009年4月11日</h2>
<p>Fixed: Menu icons were not drawn on items which have sub-menus if owner-drawing was in use.</p>
<p>Fixed: Menu icons were not freed if all menu items were deleted at once.</p>
<p>Changed (Source): Renamed AutoHotkey.sln to AutoHotkey_L.sln to allow VS window to be identified more easily.</p>  

<h2 id="L25">Revision 25 - 2009年3月30日</h2>
<p>Fixed: Send {U+xxxx} correctly sets modifier key-state as with any normal key.</p>
<p>Fixed: Send {U+..xx} no longer triggers hotkey SCxx.</p>

<h2 id="L24">Revision 24 - 2009年3月30日</h2>
<p>Added: Support for Send {U+xxxx}. SendInput() is used where available for proper unicode support, otherwise falls back to Alt+Numpad.</p>

<h2 id="L23">Revision 23 - 2009年3月30日</h2>
<p>Fixed: GuiControl, Enable/Disable now only resets focus if the focused control was disabled.</p>  

<h2 id="L22">Revision 22 - 2009年3月26日</h2>
<p>Optimized If var [not] in/contains MatchList, especially for long lists containing shorter fields.</p>  

<h2 id="L21">Revision 21 - 2009年3月16日</h2>
<p>Minor optimizations to While. [thanks Chris]</p>
<p>Fixed (Debugger): Revisions 19 and 20 omitted timer threads from the call stack.</p>
<p>Fixed (Debugger): XML-reserved characters were not escaped in most situations.</p>
<p>Fixed (Debugger): Incorrect command and transaction_id were used in the final response before exiting the script.</p>  

<h2 id="L20">Revision 20 - 2009年2月27日</h2>
<p>Changed: If an icon cannot be loaded with the new method, fall back to the old method.</p>

<h2 id="L19">Revision 19 - 2009年2月26日</h2>
<p>Added: Gui, Font, qN option to set font quality/control anti-aliasing, where N is between 0 and 5.</p>
<p>Fixed: IL_Add now loads icons at the most appropriate size when multiple sizes exist.</p>
<p>Merged with AutoHotkey v1.0.48, introducing bug fixes, optimizations and other changes by Chris. Some AutoHotkey_L features were integrated into the mainstream release; changes to these features since previous revisions are as follows:</p>
<ul>
  <li>Legacy behaviour is no longer applied to While - e.g. "While %x%" is correctly interpreted as a double-deref rather than as "While x".</li>
  <li>One-True-Brace style is now supported for While.</li>
  <li>Static vars 5月 now be declared and initialized in assume-static functions.</li>
  <li>Passing too <em>few</em> parameters in a dynamic function call is no longer allowed, as it allows the function's caller to second-guess the function's designer, reduces the ability to detect script bugs at runtime, and 5月 cause the application to crash if calling a built-in function.</li>
</ul>

<h2 id="L18">Revision 18 - 2009年2月21日</h2>
<p>Fixed: Incomplete bug-fix in previous revision causing concat followed by assignment to skip the rest of the expression in some cases.</p>

<h2 id="L17">Revision 17 - 2009年2月20日</h2>
<p>Added: Menu icons via Icon and NoIcon sub-commands of the Menu command.</p>
<p>Changed: Negative icon numbers can now be used to indicate a resource ID within an executable.</p>
<p>Changed: Set default style of menus to include MNS_CHECKORBMP.</p>
<p>Changed: Load both small and large versions of custom tray icons to allow the correct icons to be shown in the appropriate places.</p>
<p>Fixed: Loading of icons from executable files at sizes other than the system small/large.</p>

<h2 id="L16">Revision 16 - 2009年2月4日</h2>
<p>Fixed: Deleting a menu item partially deleted its associated sub-menu.</p>  

<h2 id="L15">Revision 15 - 2009年2月1日</h2>
<p>Fixed: SetFormat's presence in a *compiled* script was not disabling binary number write-caching. SetFormat should now work correctly in compiled scripts.</p>

<h2 id="L14">Revision 14 - 2009年2月1日</h2>
<p>Numerous bug-fixes and optimizations by Chris (pre-v1.0.48 beta).</p>
<p>Added: Support for regex callouts and the auto-callout option 'C'.</p>
<p>Changed: A_AhkVersion now includes the revision number. For instance, this is 1.0.47.07.L14.</p>
<p>Fixed: HWND's/window ID's were sign-extended to 64-bit. For instance, 0xb482057e became 0xffffffffb482057e.</p>

<h2 id="L13">Revision 13 - 2008年11月29日</h2>
<p>Fixed: Invalid DllCall types were treated as INT in some build environments.</p>
<p>Added: Workaround for GuiEscape issue when disabling focused control.</p>
<p>Changed version info: InternalName, ProductName and FileDescription are now "AutoHotkey_L" instead of "AutoHotkey".</p>

<h2 id="L12">Revision 12 - 2008年9月6日</h2>
<p>Fixed: Potential access violation when using property_get on a built-in variable. -- DBGP</p>

<h2 id="L11">Revision 11 - 2008年9月5日</h2>
<p>Fixed: Remove checksum from AutoHotkeySC.bin via post-build script (AutoHotkey must be installed).</p>
<p>Added: .L suffix to A_AhkVersion.</p>
<p>Added: Preliminary support for DBGp (interactive debugging).</p>

<h2 id="L10">Revision 10 - 2008年8月2日</h2>
<p>Fixed: WheelLeft/WheelRight support, which was broken in revision 9.</p>

<h2 id="L9">Revision 9 - 2008年6月29日</h2>
<p>Fixed: Allow Break/Continue in While.</p>
<p>Fixed: TrayTip in non-English Windows and possibly other side-effects of using Vista headers.</p>

<h2 id="L8">Revision 8 - 2008年6月27日</h2>
<p>Added: #IfTimeout directive to set the timeout for evaluation of #If expressions, in milliseconds. Default is 1000.</p>
<p>Added: Assume-static mode for functions. "Static" must precede any local/global variable declarations.</p>
<p>Added: One-true-brace support for While.</p>
<p>Changed: While now sets A_Index to the iteration about to begin.</p>

<h2 id="L7">Revision 7 - 2008年6月26日</h2>
<p>Added: IsFunc(FuncName) - Returns a non-zero number if FuncName exists in the script or as a built-in function.</p>

<h2 id="L5">Revision 5 - 2008年6月19日</h2>
<p>Cleaned up obsolete references to test scripts.</p>
<p>Added basic default test script.</p>

<h2 id="L4">Revision 4 - 2008年6月18日</h2>
<p>Added: #if (expression) - Similar to #IfWinActive, but for arbitrary expressions.</p>
<p>Added: WheelLeft, WheelRight - Support for WM_MOUSEHWHEEL, which was introduced with Windows Vista. (Requires Vista.)</p>
<p>Added: While, expression - Loop while a condition is true.</p>
<p>Added: A_IsPaused - True if the underlying thread is paused.</p>
<p>Added: A_IsCritical - True if the current thread has been marked uninterruptible by the "Critical" command.</p>
<p>Changed: Allow any number of parameters to be passed in dynamic function calls.</p>
<p>Fixed: Access Violation caused by WinGetClass and subclassed windows.</p>
<p>Fixed: Access Violation caused by empty dynamic function references.</p>

<p>&nbsp;</p>
</body>
</html>