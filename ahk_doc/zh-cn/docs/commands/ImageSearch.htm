<!DOCTYPE HTML>
<html>
<head>
<title>ImageSearch</title>
<meta name="description" content="在这个免费的宏程序中使用 ImageSearch 来在屏幕中搜索 ICO, BMP 或 PNG 图像. 发送键击或鼠标点击进行响应.">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ImageSearch</h1>

<p>在屏幕的某个区域中搜索图像.</p>

<pre class="Syntax">ImageSearch, OutputVarX, OutputVarY, X1, Y1, X2, Y2, ImageFile</pre>
<h3>参数</h3>
<dl>

  <dt>OutputVarX/Y</dt>
  <dd><p>用来保存在屏幕上找到的图像的左上角像素的 X 和 Y 坐标的变量名 (如果没有找到匹配, 则这两个变量被置空). 坐标相对于活动窗口, 除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置.</p>
    <p>其中一个或两个参数都可以留空, 此时可以使用 ErrorLevel (请参阅下面) 来判断是否找到了匹配.</p></dd>

  <dt>X1,Y1</dt>
  <dd><p>要搜索的矩形区域的左上角的 X 和 Y 坐标, 可以为 <a href="../Variables.htm#Expressions">表达式</a>. <strong>坐标相对于活动窗口, 除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置.</strong></p></dd>

  <dt>X2,Y2</dt>
  <dd><p>要搜索的矩形区域的右下角的 X 和 Y 坐标, 可以为 <a href="../Variables.htm#Expressions">表达式</a>. 坐标相对于活动窗口, 除非曾使用 <a href="CoordMode.htm">CoordMode</a> 改变了这个设置.</p></dd>

  <dt>ImageFile</dt>
  <dd><p>图像文件名, 如果未指定绝对路径则假定在 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a> 中. 在所有的操作系统中都支持 GIF, JPG, BMP, ICO, CUR 和 ANI 图像 (BMP 图像必须为 16 位或更高). 图标的其他来源包含下列类型的文件: EXE, DLL, CPL, SCR 以及包含图标资源的其他类型. 在 Windows XP 或更高版本中, 还支持其他图像格式, 例如PNG, TIF, Exif, WMF 和 EMF. 比 XP 早的操作系统可以通过复制微软免费的 GDI+ DLL 到 AutoHotkey.exe 文件夹中来提供支持 (但如果是 <a href="Scripts.htm#ahk2exe">已编译脚本</a>, 则复制此 DLL 到脚本的文件夹). 要下载这个 DLL, 请在 <a href="http://www.microsoft.com">www.microsoft.com</a> 搜索下列短语: gdi redistributable</p>
      <p><strong>选项</strong>: 在文件名前面可以直接添加零个或多个下列字符串. 在选项间使用单个空格或 tab 分隔. 例如:<code>*2 *w100 *h-1 C:\Main Logo.bmp</code>.</p>
      <p><strong>*IconN</strong>:要使用文件中的图标组而不是首个图标,请指定 <code>*Icon</code> 后紧跟着图标组编号.例如,<code>*Icon2</code> 将加载第二个图标组中的默认图标.</p>    
    <p><strong>*n</strong> (渐变值): 指定 <strong>n</strong> 为介于 0 和 255 (包含的) 之间的数字, 用于表示每个像素颜色红/绿/蓝通道强度在每个方向上允许的渐变值. 例如,<code>*2</code> 将允许二的渐变值.此参数可用于图像的颜色轻微变化或 <em>ImageFile</em> 使用的格式(例如 GIF 或 JPG)不能准确表示屏幕上的图像的时候.如果指定 255 为浮动的渐变值, 则匹配所有颜色. 默认渐变值为 0.</p>
    <p><strong>*TransN</strong>: 此选项通过指定图像内的某种颜色能匹配屏幕上的任何颜色, 使得更容易找到匹配. 它常用于寻找含有透明区域的 PNG, GIF 和 TIF 文件 (然而, 对于图标则不需要此选项, 因为它们的透明度是自动支持的). 对于 GIF 文件,<code>*TransWhite</code> 很可能会有用.对于 PNG 和 TIF 文件,<code>*TransBlack</code> 可能是最佳的.否则,指定 <strong>N</strong> 为其他颜色名称或 RGB 值(请参阅<a href="Progress.htm#colors">颜色图表</a>进行了解或使用 <a href="PixelGetColor.htm">PixelGetColor</a> 的 RGB 模式).例如:<code>*TransBlack</code>,<code>*TransFFFFAA</code>,<code>*Trans0xFFFFAA</code>.</p>    
    <p><strong>*wn</strong> 和 <strong>*hn</strong>:用于缩放图像尺寸的目标宽度和高度(此宽度和高度也决定了从多图标的 .ICO 文件中加载哪个图标).如果同时省略这两个选项,则把从 ICO,DLL 或 EXE 文件中加载的图标调整到系统默认的小图标大小,通常为 16 X16(通过指定 <code>*w0 *h0</code> 您可以强制使用实际/内部的大小).图标外的其他图像以它们的实际大小加载. 要保持高宽比来缩放图像, 请在其中一个尺寸中指定 -1 而在另一个中指定正数. 例如,指定 <code>*w200 *h-1</code> 将缩放图像到 200 像素的宽度同时自动设置其高度.</p>
    <p><span class="ver">[v1.1.23+]:</span> <a href="../misc/ImageHandles.htm">bitmap (位图) 或 icon (图标) handle (句柄)</a> 可用于替代文件名. 例如, <code>HBITMAP:*%handle%</code>.</p>
  </dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> 此命令在搜索遇到问题时会抛出异常. 想了解更多信息, 请参阅 <a href="Catch.htm#RuntimeErrors">运行时错误</a>.</p>
<p>如果在指定的区域找到指定的图像, 则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被设置为 0, 没有找到则为 1, 而如果在命令执行过程中遇到问题使搜索无法进行 (例如打开图像文件失败或糟糕的格式选项) 则为 2.</p>
<h3>备注</h3>
<p>ImageSearch 可用于在屏幕上查找缺少文本或其文本不易获取的图形目标. 例如, 它可用于查找图片按钮, 图标, 网页链接或游戏目标的位置. 找到后, 可以使用 <a href="Click.htm">Click</a> 点击这样的目标.</p>
<p>在有些时候有用的一个策略是搜索图像中的一小块剪辑而不是整个图像. 此方法可以在图像整体发生变化而其内部某些部分保持不变时提高可靠性. 提取剪辑的一种方法是:</p>
<ol>
  <li>在活动窗口中图像可见时按下 Alt+PrintScreen. 这样把屏幕截图放在了剪贴板中.</li>
  <li>打开图像处理程序, 例如 Paint.</li>
  <li>粘贴剪贴板的内容 (即屏幕截图).</li>
  <li>选择对图像而言唯一且不变的区域.</li>
  <li>复制并粘贴那个区域到新的图像文档.</li>
  <li>保存为小文件供 ImageSearch 使用.</li>
</ol>
<p>要实现匹配, 屏幕上的图像必须与通过 <em>ImageFile</em> 参数及其选项加载的图像具有相同的尺寸.</p>
<p>要搜索的目标区域必须是可见的; 换句话说, 无法搜索隐藏在其他窗口背后的窗口区域. 与之相比, 部分在鼠标光标下方的图像通常可以检测出来. 例外情况是游戏的指针, 在大多数情况下它会遮住在它下方的任何图像.</p>
<p>由于搜索从目标区域的顶行开始往下, 所以如果有多个匹配, 则会找到最接近顶部的那个.</p>
<p>包含透明色的图标会自动允许那个颜色匹配屏幕上的任何颜色. 因此, 在图标后的颜色是不重要的.</p>
<p>ImageSearch 可支持 8 位色 (256 色) 或更高的屏幕.</p>
<p>搜索行为可能会因显示适配器的颜色深度而变化 (尤其对于 GIF 和 JPG 文件). 因此, 如果脚本会在多种颜色深度下运行, 最好在每种深度设置下进行测试. 您可以使用渐变选项 (*n) 来辅助协调在多种颜色深度下的搜索行为.</p>
<p>如果屏幕上的图像是半透明的, 则 ImageSearch 很可能无法找到它. 要避免此问题,请尝试渐变选项(*n)或使用 <code><a href="WinSet.htm#trans">WinSet, Transparent, Off</a></code> 临时地关闭窗口的透明.</p>
<h3>相关</h3>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="PixelGetColor.htm">PixelGetColor</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h3>示例</h3>
<pre class="NoIndent">ImageSearch, FoundX, FoundY, 40,40, 300, 300, C:\My Images\test.bmp

CoordMode Pixel  <em>; 将下面的坐标解释为相对于屏幕而不是活动窗口.</em>
ImageSearch, FoundX, FoundY, 0, 0, A_ScreenWidth, A_ScreenHeight, *Icon3 %A_ProgramFiles%\SomeApp\SomeApp.exe
if ErrorLevel = 2
    MsgBox Could not conduct the search.
else if ErrorLevel = 1
    MsgBox Icon could not be found on the screen.
else
    MsgBox The icon was found at %FoundX%x%FoundY%.</pre>

</body>
</html>
